{"version":3,"sources":["../src/conversationset.js"],"names":["define","stitles","init","transcriptiondata","fetchTranscriptionData","fetchCount","length","addItem","index","part","item","makeItem","push","insertItem","splice","removeItem","fetchItem","updateItem","movedown","canmovedown","moveItem","moveup","canmoveup","from","to","f","split","originalitem","originalduration","end","start","firststart","firstend","secondend","mergeUp","canMergeUp","upperitem","loweritem"],"mappings":"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","sourcesContent":["define([\"jquery\"], function($) {\r\n\r\n    //transcription set is the data layer for the transcriptions. its an array of objects,\r\n    // with methods to access and manipulate items and the array.\r\n\r\n  return {\r\n       stitles: [],\r\n\r\n      init: function(transcriptiondata){\r\n            this.stitles = transcriptiondata;\r\n      },\r\n\r\n      fetchTranscriptionData: function(){\r\n          return this.stitles;\r\n      },\r\n\r\n      fetchCount: function(){\r\n          return this.stitles.length;\r\n      },\r\n      addItem: function(index,part){\r\n          var item = this.makeItem(part);\r\n          this.stitles.push(item);\r\n      },\r\n      insertItem: function(index,part){\r\n          var item = this.makeItem(part);\r\n          this.stitles.splice(index, 0, item);\r\n      },\r\n      removeItem: function(index){\r\n          this.stitles.splice(index, 1);\r\n      },\r\n      fetchItem: function(index){\r\n          return this.stitles[index];\r\n      },\r\n\r\n      updateItem: function(index,part){\r\n\r\n          this.stitles[index].part = part;\r\n      },\r\n      movedown: function(index){\r\n        //basic error check. Should not get here in this case anyway\r\n        if(!this.canmovedown(index)){return false;}\r\n         this.moveItem(index, index+1);\r\n        return true;\r\n\r\n      },\r\n      moveup: function(index){\r\n          //basic error check. Should not get here in this case anyway\r\n          if(!this.canmoveup(index)){return false;}\r\n          this.moveItem(index, index-1);\r\n          return true;\r\n      },\r\n      moveItem: function(from, to) {\r\n        // remove `from` item and store it\r\n        var f = this.stitles.splice(from, 1)[0];\r\n        // insert stored item into position `to`\r\n          this.stitles.splice(to, 0, f);\r\n        },\r\n\r\n      canmoveup: function(index){\r\n          if(index==0 || this.fetchCount()<2){\r\n              return false;\r\n          }else{\r\n              return true;\r\n          }\r\n      },\r\n      canmovedown: function(index){\r\n          if(index>=this.fetchCount()-1 || this.fetchCount()<2){\r\n              return false;\r\n          }else{\r\n              return true;\r\n          }\r\n      },\r\n      makeItem: function(part){\r\n         return { part: part};\r\n      },\r\n\r\n      //UNUSED ... buyt worth keeping\r\n      split: function(index){\r\n          var originalitem = this.fetchItem(index);\r\n          var originalduration = originalitem.end - originalitem.start;\r\n\r\n          //if its less than a third of a second our calcs might error(or someone is trying subliminal advertising)\r\n          //lets just stop right here\r\n          if(originalduration < 300){return false;}\r\n\r\n          var firststart = originalitem.start;\r\n          var firstend =  originalitem.start + (originalduration / 2) - 100;\r\n          var secondstart = firstend + 200;\r\n          var secondend = originalitem.end;\r\n\r\n\r\n          this.insertItem(index,firststart,firstend,originalitem.part);\r\n          this.updateItem(index+1,secondstart,secondend,originalitem.part);\r\n          return true;\r\n\r\n      },\r\n      //UNUSED  .. but worth keeping\r\n      mergeUp: function(index){\r\n          //basic error check. Should not get here in this case anyway\r\n          if(!this.canMergeUp(index)){return false;}\r\n\r\n          var upperitem = this.fetchItem(index);\r\n          var loweritem = this.fetchItem(index-1);\r\n          this.updateItem(index-1,loweritem.start,upperitem.end, loweritem.part + \" \" + upperitem.part);\r\n          this.removeItem(index);\r\n          return true;\r\n      },\r\n      canMergeUp: function(index){\r\n          if(index==0 || this.fetchCount()<2){\r\n              return false;\r\n          }else{\r\n              return true;\r\n          }\r\n      },\r\n\r\n    }\r\n});\r\n"],"file":"conversationset.min.js"}