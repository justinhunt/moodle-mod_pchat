{"version":3,"sources":["../src/passagemarkup.js"],"names":["define","$","log","popoverhelper","debug","controls","currentmode","constants","REVIEWMODE_NOERRORS","REVIEWMODE_SHOWERRORS","cd","passagecontainer","summarytranscript","summarytranscriptplaceholder","audioplayerclass","wordplayerclass","wordclass","spaceclass","badwordclass","endspaceclass","unreadwordclass","unreadspaceclass","aiunmatched","turnclass","options","endwordnumber","errorwords","activityid","attemptid","sesskey","turns","reviewmode","init","config","theid","configcontrol","get","opts","JSON","parse","value","remove","register_controls","totalwordcount","length","totalseconds","sessionscore","sessionmatches","aidata","transcriptwords","transcript","split","filter","el","markup_badwords","markup_aiunmatchedwords","markup_aiunmatchedspaces","markup_turns","removeClass","addClass","thespace","register_events","init_popoverhelper","wordplayer","audioplayer","eachword","eachspace","endwordmarker","that","on","wordnumber","parseInt","attr","isShowing","doPlaySpotCheck","hasClass","chunk","fetchTranscriptChunk","addTranscript","spotcheckindex","playchain","fetchWordPlayChain","theplayer","pad","duration","endtime","parseFloat","audioend","isNaN","starttime","audiostart","currentTime","off","currenttime","pause","play","fetchTurnEndWord","currentwordindex","currentword","turnendword","siblings","last","turnend","fetchTurnStartWord","turnstartword","first","turnstart","isbad","isunmatched","fetchBadWordPlayChain","startword","endword","audiostartword","audioendword","startindex","endindex","passageendword","beforelimit","afterlimit","startadjust","endadjust","console","doSpotCheckMode","spotcheckmode","prevmatch","each","index","unmatchedcount","errorword","undoSpotCheckMode","doTranscriptCheckMode","undoTranscriptCheckMode","checkindex","transcriptlength","startpassageindex","isunreadword","tposition","endpassageindex","ret","slice","join","trim","m","processunread","turnspan","startelement","start","newturnspan","insertBefore","i","end","append","processspace","processscores","enforcemarker"],"mappings":"AAAAA,OAAM,2BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,yBAAvB,CAAD,CAAoD,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAAiC,CACvF,aAEAD,CAAG,CAACE,KAAJ,CAAU,8BAAV,EAEA,MAAO,CAGHC,QAAQ,CAAE,EAHP,CAIHC,WAAW,CAAE,SAJV,CAMHC,SAAS,CAAE,CACPC,mBAAmB,CAAE,CADd,CAEPC,qBAAqB,CAAE,CAFhB,CANR,CAYHC,EAAE,CAAE,CACAC,gBAAgB,CAAE,+BADlB,CAEAC,iBAAiB,CAAE,6BAFnB,CAGAC,4BAA4B,CAAE,wCAH9B,CAIAC,gBAAgB,CAAE,8BAJlB,CAKAC,eAAe,CAAE,yBALjB,CAMAC,SAAS,CAAE,+BANX,CAOAC,UAAU,CAAE,gCAPZ,CAQAC,YAAY,CAAE,2BARd,CASAC,aAAa,CAAE,4BATf,CAUAC,eAAe,CAAE,8BAVjB,CAWAC,gBAAgB,CAAE,+BAXlB,CAYAC,WAAW,CAAE,uBAZb,CAaAC,SAAS,CAAE,uBAbX,CAZD,CA4BHC,OAAO,CAAE,CACLC,aAAa,CAAE,CADV,CAELC,UAAU,CAAE,EAFP,CAGLC,UAAU,CAAE,IAHP,CAILC,SAAS,CAAE,IAJN,CAKLC,OAAO,CAAE,IALJ,CAMLC,KAAK,CAAE,EANF,CAOLC,UAAU,CAAE,CAPP,CA5BN,CAuCHC,IAAI,CAAE,cAAUC,CAAV,CAAkB,IAGhBC,CAAAA,CAAK,CAAG,IAAMD,CAAM,GAHJ,CAIhBE,CAAa,CAAGlC,CAAC,CAACiC,CAAD,CAAD,CAASE,GAAT,CAAa,CAAb,CAJA,CAKpB,GAAID,CAAJ,CAAmB,CACf,GAAIE,CAAAA,CAAI,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAa,CAACK,KAAzB,CAAX,CACAvC,CAAC,CAACiC,CAAD,CAAD,CAASO,MAAT,EACH,CAHD,IAGO,CAEHvC,CAAG,CAACE,KAAJ,CAAU,wDAAV,EACA,MACH,CAGD,KAAKsC,iBAAL,GAGA,KAAKlB,OAAL,CAAaG,UAAb,CAA0BU,CAAI,WAA9B,CACA,KAAKb,OAAL,CAAaI,SAAb,CAAyBS,CAAI,UAA7B,CACA,KAAKb,OAAL,CAAaK,OAAb,CAAuBQ,CAAI,QAA3B,CACA,KAAKb,OAAL,CAAaM,KAAb,CAAqBO,CAAI,MAAzB,CACA,KAAKb,OAAL,CAAamB,cAAb,CAA8B1C,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAf,CAAD,CAA2B4B,MAAzD,CAEA,GAA0B,CAAtB,CAAAP,CAAI,YAAR,CAA6B,CACzB,GAA8B,EAA1B,GAAAA,CAAI,cAAR,CAAkC,CAC9B,KAAKb,OAAL,CAAaE,UAAb,CAA0BY,IAAI,CAACC,KAAL,CAAWF,CAAI,cAAf,CAC7B,CAFD,IAEO,CACH,KAAKb,OAAL,CAAaE,UAAb,CAA0B,EAC7B,CACD,KAAKF,OAAL,CAAaqB,YAAb,CAA4BR,CAAI,YAAhC,CACA,KAAKb,OAAL,CAAaC,aAAb,CAA6BY,CAAI,eAAjC,CACA,KAAKb,OAAL,CAAasB,YAAb,CAA4BT,CAAI,aAAhC,CAIA,GAAGA,CAAI,eAAP,CAA2B,CACvB,KAAKb,OAAL,CAAauB,cAAb,CAA8BT,IAAI,CAACC,KAAL,CAAWF,CAAI,eAAf,CACjC,CAFD,IAEK,CACD,KAAKb,OAAL,CAAauB,cAAb,CAA6B,EAChC,CACD,KAAKvB,OAAL,CAAawB,MAAb,CAAsBX,CAAI,OAA1B,CACA,GAAI,KAAKb,OAAL,CAAawB,MAAjB,CAAyB,CACrB,KAAKxB,OAAL,CAAayB,eAAb,CAA+BZ,CAAI,OAAJ,CAAea,UAAf,CAA0BC,KAA1B,CAAgC,GAAhC,CAA/B,CAGA,KAAK3B,OAAL,CAAayB,eAAb,CAA+B,KAAKzB,OAAL,CAAayB,eAAb,CAA6BG,MAA7B,CAAoC,SAAUC,CAAV,CAAc,CAC7E,MAAc,EAAP,GAAAA,CACV,CAF8B,CAIlC,CARD,IAQO,CACH,KAAK7B,OAAL,CAAayB,eAAb,CAA+B,EAClC,CAGD,KAAKK,eAAL,GACA,KAAKC,uBAAL,GACA,KAAKC,wBAAL,GAGA,KAAKC,YAAL,GAGAxD,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQC,gBAAf,CAAD,CAAkC+C,WAAlC,CAA8C,KAAKhD,EAAL,CAAQG,4BAAtD,EAAoF8C,QAApF,CAA6F,KAAKjD,EAAL,CAAQE,iBAArG,CAGH,CA1CD,IA0CO,CAEH,KAAKY,OAAL,CAAaC,aAAb,CAA6B,KAAKD,OAAL,CAAamB,cAC7C,CAGD,GAAIiB,CAAAA,CAAQ,CAAG3D,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAd,CAA2B,GAA3B,CAAiC,KAAKO,OAAL,CAAaC,aAA/C,CAAhB,CACAmC,CAAQ,CAACD,QAAT,CAAkB,KAAKjD,EAAL,CAAQS,aAA1B,EAGA,KAAK0C,eAAL,GAIA,KAAKC,kBAAL,EAEH,CAzHE,CA4HHA,kBAAkB,CAAE,6BAAY,CACjB,IADiB,CAI5B3D,CAAa,CAAC6B,IAAd,EACH,CAjIE,CAmIHU,iBAAiB,CAAE,4BAAY,CAE3B,KAAKrC,QAAL,CAAc0D,UAAd,CAA2B9D,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQK,eAAf,CAA5B,CACA,KAAKV,QAAL,CAAc2D,WAAd,CAA4B/D,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQI,gBAAf,CAA7B,CACA,KAAKT,QAAL,CAAc4D,QAAd,CAAyBhE,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAf,CAA1B,CACA,KAAKX,QAAL,CAAc6D,SAAd,CAA0BjE,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAf,CAA3B,CACA,KAAKZ,QAAL,CAAc8D,aAAd,CAA8BlE,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAd,CAA2B,GAA3B,CAAiC,KAAKO,OAAL,CAAaC,aAA/C,CAA/B,CACA,KAAKpB,QAAL,CAAcM,gBAAd,CAAiCV,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQC,gBAAf,CAErC,CA5IE,CA8IHkD,eAAe,CAAE,0BAAY,CACzB,GAAIO,CAAAA,CAAI,CAAG,IAAX,CAKA,KAAK/D,QAAL,CAAcM,gBAAd,CAA+B0D,EAA/B,CAAkC,OAAlC,CAA0C,IAAM,KAAK3D,EAAL,CAAQM,SAAxD,CAAmE,UAAY,CACvE,GAAIsD,CAAAA,CAAU,CAAGC,QAAQ,CAACtE,CAAC,CAAC,IAAD,CAAD,CAAQuE,IAAR,CAAa,iBAAb,CAAD,CAAzB,CAGA,GAAI,CAACrE,CAAa,CAACsE,SAAd,CAAwB,IAAxB,CAAL,CAAoC,CAChCL,CAAI,CAACM,eAAL,CAAqBJ,CAArB,CACH,CAED,GAAGrE,CAAC,CAAC,IAAD,CAAD,CAAQ0E,QAAR,CAAiBP,CAAI,CAAC1D,EAAL,CAAQY,WAAzB,CAAH,CAAyC,CACrC,GAAIsD,CAAAA,CAAK,CAAGR,CAAI,CAACS,oBAAL,CAA0BP,CAA1B,CAAZ,CACA,GAAIM,CAAJ,CAAW,CACPzE,CAAa,CAAC2E,aAAd,CAA4B,IAA5B,CAAkCF,CAAlC,CACH,CACJ,CAER,CAfD,CAiBH,CArKE,CA2KHF,eAAe,CAAE,yBAAUK,CAAV,CAA0B,CACvC,GAAIC,CAAAA,CAAS,CAAG,KAAKC,kBAAL,CAAwBF,CAAxB,CAAhB,CACA7E,CAAG,CAACE,KAAJ,CAAU4E,CAAV,EAFuC,GAGnCE,CAAAA,CAAS,CAAG,KAAK7E,QAAL,CAAc2D,WAAd,CAA0B,CAA1B,CAHuB,CAKnCmB,CAAG,CAAG,EAL6B,CAMnCC,CAAQ,CAAGF,CAAS,CAACE,QANc,CAQnCC,CAAO,CAAGC,UAAU,CAACN,CAAS,CAACO,QAAX,CARe,CASvC,GAAI,CAACC,KAAK,CAACJ,CAAD,CAAN,EAAoBA,CAAQ,CAAIC,CAAO,CAAGF,CAA9C,CAAoD,CAChDE,CAAO,CAAGA,CAAO,CAAGF,CACvB,CAED,GAAIM,CAAAA,CAAS,CAAGH,UAAU,CAACN,CAAS,CAACU,UAAX,CAA1B,CACA,GAAwB,CAApB,CAACD,CAAS,CAAGN,CAAjB,CAA2B,CACvBM,CAAS,CAAGA,CAAS,CAAGN,CAC3B,CAEDD,CAAS,CAACS,WAAV,CAAwBF,CAAxB,CACAxF,CAAC,CAAC,KAAKI,QAAL,CAAc2D,WAAf,CAAD,CAA6B4B,GAA7B,CAAiC,YAAjC,EACA3F,CAAC,CAAC,KAAKI,QAAL,CAAc2D,WAAf,CAAD,CAA6BK,EAA7B,CAAgC,YAAhC,CAA8C,UAAa,CACvD,GAAIwB,CAAAA,CAAW,CAAGX,CAAS,CAACS,WAA5B,CACA,GAAIE,CAAW,EAAIR,CAAnB,CAA4B,CACxBpF,CAAC,CAAC,IAAD,CAAD,CAAQ2F,GAAR,CAAY,YAAZ,EACAV,CAAS,CAACY,KAAV,EACH,CACJ,CAND,EAOAZ,CAAS,CAACa,IAAV,EACH,CAvME,CA0MHC,gBAAgB,CAAE,0BAASC,CAAT,CAA0B,IACpCC,CAAAA,CAAW,CAAGjG,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCiF,CAAjC,CADqB,CAEpCE,CAAW,CAAGD,CAAW,CAACE,QAAZ,CAAqB,IAAM,KAAK1F,EAAL,CAAQM,SAAnC,EAA8CqF,IAA9C,EAFsB,CAGpCC,CAAO,CAAGH,CAAW,CAAC3B,IAAZ,CAAiB,iBAAjB,CAH0B,CAIxC,GAAG,CAAC8B,CAAD,EAAYA,CAAO,CAAGL,CAAzB,CAA2C,CACvCK,CAAO,CAAGL,CACb,CACD,MAAOK,CAAAA,CAEV,CAnNE,CAqNHC,kBAAkB,CAAE,4BAASN,CAAT,CAA0B,IACtCC,CAAAA,CAAW,CAAGjG,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCiF,CAAjC,CADuB,CAEtCO,CAAa,CAAGN,CAAW,CAACE,QAAZ,CAAqB,IAAM,KAAK1F,EAAL,CAAQM,SAAnC,EAA8CyF,KAA9C,EAFsB,CAGtCC,CAAS,CAAGF,CAAa,CAAChC,IAAd,CAAmB,iBAAnB,CAH0B,CAI1C,GAAG,CAACkC,CAAD,EAAcA,CAAS,CAAET,CAA5B,CAA8C,CAC1CS,CAAS,CAAGT,CACf,CACD,MAAOS,CAAAA,CAEV,CA9NE,CAqOHzB,kBAAkB,CAAE,4BAAUX,CAAV,CAAsB,IAClCqC,CAAAA,CAAK,CAAG1G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQQ,YAA/D,CAD0B,CAElC0F,CAAW,CAAG3G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQY,WAA/D,CAFoB,CAGtC,GAAGqF,CAAK,EAAIC,CAAZ,CAAwB,CACpB,MAAO,MAAKC,qBAAL,CAA2BvC,CAA3B,CACV,CAFD,IAEK,IACGmB,CAAAA,CAAS,CAAG,KAAKjE,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CoB,UAD5D,CAEGL,CAAO,CAAG,KAAK7D,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CiB,QAF1D,CAGGP,CAAS,CAAG,EAHf,CAIDA,CAAS,CAAC8B,SAAV,CAAsBxC,CAAtB,CACAU,CAAS,CAAC+B,OAAV,CAAoBzC,CAApB,CACAU,CAAS,CAACU,UAAV,CAAuBD,CAAvB,CACAT,CAAS,CAACO,QAAV,CAAqBF,CAArB,CACA,MAAOL,CAAAA,CACV,CACJ,CApPE,CA8PH6B,qBAAqB,CAAE,+BAAU9B,CAAV,CAA0B,CAS7C,OANIiC,CAAAA,CAAc,CAAC,CAMnB,CALIC,CAAY,CAAC,CAKjB,CAFIC,CAAU,CAAGnC,CAEjB,CADIU,CAAS,CAAG,CAAC,CACjB,CAASnB,CAAU,CAAGS,CAAtB,CAAmD,CAAb,CAAAT,CAAtC,CAAsDA,CAAU,EAAhE,CAAoE,IAC5DqC,CAAAA,CAAK,CAAG1G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQQ,YAA/D,CADoD,CAE5D0F,CAAW,CAAG3G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQY,WAA/D,CAF8C,CAKhE,GAAIqF,CAAK,EAAIC,CAAb,CAA0B,CACtBM,CAAU,CAAG5C,CAAb,CACA,GAAI,CAACsC,CAAL,CAAkB,CACdnB,CAAS,CAAG,KAAKjE,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CoB,UAAzD,CACAsB,CAAc,CAAC1C,CAClB,CAHD,IAGO,CACHmB,CAAS,CAAG,CAAC,CAChB,CACJ,CARD,IAQO,CACH,KACH,CACJ,CAED,GAAkB,CAAC,CAAf,GAAAA,CAAJ,CAAsB,CAClBA,CAAS,CAAG,CAAZ,CACA,IAAK,GAAInB,CAAAA,CAAU,CAAG4C,CAAU,CAAG,CAAnC,CAAmD,CAAb,CAAA5C,CAAtC,CAAsDA,CAAU,EAAhE,CAAoE,CAChE,GAAI,KAAK9C,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,CAAJ,CAAkD,CAC9CmB,CAAS,CAAG,KAAKjE,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CiB,QAAzD,CACAyB,CAAc,CAAC1C,CAAf,CACA,KACH,CACJ,CACJ,CAMD,OAHI6C,CAAAA,CAAQ,CAAGpC,CAGf,CAFIM,CAAO,CAAG,CAAC,CAEf,CADI+B,CAAc,CAAG,KAAK5F,OAAL,CAAamB,cAClC,CAAS2B,CAAU,CAAGS,CAAtB,CAAsCT,CAAU,EAAI8C,CAApD,CAAoE9C,CAAU,EAA9E,CAAkF,IAC1EqC,CAAAA,CAAK,CAAG1G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQQ,YAA/D,CADkE,CAE1E0F,CAAW,CAAG3G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQY,WAA/D,CAF4D,CAI9E,GAAIqF,CAAK,EAAIC,CAAb,CAA0B,CACtBO,CAAQ,CAAG7C,CAAX,CACA,GAAI,CAACsC,CAAL,CAAkB,CACdvB,CAAO,CAAG,KAAK7D,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CiB,QAAvD,CACA0B,CAAY,CAAC3C,CAChB,CAHD,IAGO,CACHe,CAAO,CAAG,CAAC,CACd,CACJ,CARD,IAQO,CACH,KACH,CACJ,CAED,GAAgB,CAAC,CAAb,GAAAA,CAAJ,CAAoB,CAChBA,CAAO,CAAG,KAAK7D,OAAL,CAAaqB,YAAvB,CACA,IAAK,GAAIyB,CAAAA,CAAU,CAAG6C,CAAQ,CAAG,CAAjC,CAAoC7C,CAAU,EAAI8C,CAAlD,CAAkE9C,CAAU,EAA5E,CAAgF,CAC5E,GAAI,KAAK9C,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,CAAJ,CAAkD,CAC9Ce,CAAO,CAAG,KAAK7D,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CoB,UAAvD,CACAuB,CAAY,CAAC3C,CAAb,CACA,KACH,CACJ,CACJ,CApE4C,GAuEzCU,CAAAA,CAAS,CAAG,CACN8B,SADM,CACMI,CADN,CAENH,OAFM,CAEIxC,QAAQ,CAAC4C,CAAD,CAFZ,CAGNzB,UAHM,CAGOD,CAHP,CAINF,QAJM,CAIKhB,QAAQ,CAACc,CAAD,CAJb,CAvE6B,CAiFzCqB,CAAS,CAAG,KAAKH,kBAAL,CAAwBxB,CAAxB,CAjF6B,CAkFzCuB,CAAO,CAAG,KAAKN,gBAAL,CAAsBjB,CAAtB,CAlF+B,CAmFzCsC,CAAW,CAAE,CAnF4B,CAoFzCC,CAAU,CAAE,CApF6B,CAqFzCC,CAAW,CAAE,CArF4B,CAsFzCC,CAAS,CAAE,CAtF8B,CAuF7C,GAAoB,CAAjB,CAAAR,CAAc,EAAQA,CAAc,CAAGN,CAA1C,CAAoD,CAChDW,CAAW,CAAGtC,CAAc,CAAC2B,CAAf,CAA2B,CAC5C,CACD,GAAGO,CAAY,CAAGX,CAAlB,CAA0B,CACtBgB,CAAU,CAAGhB,CAAO,CAAEvB,CAAT,CAAyB,CACzC,CAED,KAAGsC,CAAW,EAAIC,CAAlB,EAEM,CAEF,GAAID,CAAJ,CAAiB,CACbE,CAAW,CAAG,GAAMF,CAApB,CACArC,CAAS,CAACU,UAAV,CAAuBV,CAAS,CAACO,QAAV,CAAqBgC,CAA5C,CACAE,OAAO,CAACvH,GAAR,CAAY,eAAiBqH,CAA7B,CAGH,CAND,IAMO,IAAID,CAAJ,CAAgB,CACnBE,CAAS,CAAG,GAAMF,CAAlB,CACAtC,CAAS,CAACO,QAAV,CAAqBP,CAAS,CAACU,UAAV,CAAuB8B,CAA5C,CACAC,OAAO,CAACvH,GAAR,CAAY,aAAeqH,CAA3B,CACH,CACJ,CACDE,OAAO,CAACvH,GAAR,CAAY8E,CAAZ,EACA,MAAOA,CAAAA,CAEV,CA/WE,CAsXH0C,eAAe,CAAE,0BAAY,CACd,IADc,CAIzB,KAAKnE,uBAAL,GAGAtD,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQQ,YAAf,CAAD,CAA8ByC,QAA9B,CAAuC,KAAKjD,EAAL,CAAQiH,aAA/C,EAMA,KAAKnE,wBAAL,GAEA,KAAKlD,WAAL,CAAmB,WACtB,CAtYE,CAyYHiD,uBAAuB,CAAE,kCAAY,CACjC,GAAIa,CAAAA,CAAI,CAAG,IAAX,CACA,GAAI,KAAK5C,OAAL,CAAauB,cAAjB,CAAiC,CAC7B,GAAI6E,CAAAA,CAAS,CAAG,CAAhB,CACA3H,CAAC,CAAC4H,IAAF,CAAO,KAAKrG,OAAL,CAAauB,cAApB,CAAoC,SAAU+E,CAAV,CAAwB,CACxD,GAAIC,CAAAA,CAAc,CAAGD,CAAK,CAAGF,CAAR,CAAoB,CAAzC,CACA,GAAqB,CAAjB,CAAAG,CAAJ,CAAwB,CACpB,IAAK,GAAIC,CAAAA,CAAS,CAAG,CAAhB,CACG1D,CADR,CAAwB0D,CAAS,CAAGD,CAAc,CAAG,CAArD,CAAwDC,CAAS,EAAjE,CAAqE,CAC7D1D,CAD6D,CAChDsD,CAAS,CAAGI,CADoC,CAEjE/H,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CX,QAA9C,CAAuDS,CAAI,CAAC1D,EAAL,CAAQY,WAA/D,CACH,CACJ,CACDsG,CAAS,CAAGrD,QAAQ,CAACuD,CAAD,CACvB,CATD,EAYA,IAAK,GAAIE,CAAAA,CAAS,CAAGJ,CAAS,CAAG,CAAjC,CAAoCI,CAAS,EAAI,KAAKxG,OAAL,CAAaC,aAA9D,CAA6EuG,CAAS,EAAtF,CAA0F,CACtF/H,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCgH,CAAjC,CAAD,CAA6CrE,QAA7C,CAAsDS,CAAI,CAAC1D,EAAL,CAAQY,WAA9D,CACH,CACJ,CAEJ,CA9ZE,CAkaHkC,wBAAwB,CAAE,mCAAY,CAClC,GAAIY,CAAAA,CAAI,CAAG,IAAX,CACAnE,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgC,KAAKN,EAAL,CAAQY,WAAzC,CAAD,CAAuDuG,IAAvD,CAA4D,UAAiB,CACzE,GAAIvD,CAAAA,CAAU,CAAGC,QAAQ,CAACtE,CAAC,CAAC,IAAD,CAAD,CAAQuE,IAAR,CAAa,iBAAb,CAAD,CAAzB,CAEA,GAAIvE,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,EAAiCsD,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoDK,QAApD,CAA6DP,CAAI,CAAC1D,EAAL,CAAQiH,aAArE,GACA1H,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,EAAiCsD,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoDK,QAApD,CAA6DP,CAAI,CAAC1D,EAAL,CAAQY,WAArE,CADJ,CACuF,CACnFrB,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQO,UAAd,CAA2B,GAA3B,CAAiCqD,CAAlC,CAAD,CAA+CX,QAA/C,CAAwDS,CAAI,CAAC1D,EAAL,CAAQY,WAAhE,CACH,CACJ,CAPD,CAQH,CA5aE,CA+aH2G,iBAAiB,CAAE,4BAAY,CAC3BhI,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQQ,YAAf,CAAD,CAA8BwC,WAA9B,CAA0C,KAAKhD,EAAL,CAAQiH,aAAlD,EACA1H,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAf,CAAD,CAA4ByC,WAA5B,CAAwC,KAAKhD,EAAL,CAAQiH,aAAhD,EACA1H,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAf,CAAD,CAA2B0C,WAA3B,CAAuC,KAAKhD,EAAL,CAAQY,WAA/C,EACArB,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAf,CAAD,CAA4ByC,WAA5B,CAAwC,KAAKhD,EAAL,CAAQY,WAAhD,EACArB,CAAC,CAAC,KAAKI,QAAL,CAAc2D,WAAf,CAAD,CAA6B4B,GAA7B,CAAiC,YAAjC,EACAzF,CAAa,CAACsC,MAAd,EACH,CAtbE,CA2bHyF,qBAAqB,CAAE,gCAAY,CAC/B,GAAI9D,CAAAA,CAAI,CAAG,IAAX,CAEA,GAAI,KAAK5C,OAAL,CAAauB,cAAjB,CAAiC,CAC7B,GAAI6E,CAAAA,CAAS,CAAG,CAAhB,CACA3H,CAAC,CAAC4H,IAAF,CAAO,KAAKrG,OAAL,CAAauB,cAApB,CAAoC,SAAU+E,CAAV,CAAwB,CACxD,GAAIC,CAAAA,CAAc,CAAGD,CAAK,CAAGF,CAAR,CAAoB,CAAzC,CACA,GAAqB,CAAjB,CAAAG,CAAJ,CAAwB,CACpB,IAAK,GAAIC,CAAAA,CAAS,CAAG,CAAhB,CACG1D,CADR,CAAwB0D,CAAS,CAAGD,CAAc,CAAG,CAArD,CAAwDC,CAAS,EAAjE,CAAqE,CAC7D1D,CAD6D,CAChDsD,CAAS,CAAGI,CADoC,CAEjE/H,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CX,QAA9C,CAAuDS,CAAI,CAAC1D,EAAL,CAAQY,WAA/D,CACH,CACJ,CACDsG,CAAS,CAAGrD,QAAQ,CAACuD,CAAD,CACvB,CATD,EAYA,IAAK,GAAIE,CAAAA,CAAS,CAAGJ,CAAS,CAAG,CAAjC,CAAoCI,CAAS,EAAI,KAAKxG,OAAL,CAAaC,aAA9D,CAA6EuG,CAAS,EAAtF,CAA0F,CACtF/H,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCgH,CAAjC,CAAD,CAA6CrE,QAA7C,CAAsDS,CAAI,CAAC1D,EAAL,CAAQY,WAA9D,CACH,CACJ,CAGDrB,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQY,WAAf,CAAD,CAA6BuG,IAA7B,CAAkC,UAAiB,CAC/C,GAAIvD,CAAAA,CAAU,CAAGC,QAAQ,CAACtE,CAAC,CAAC,IAAD,CAAD,CAAQuE,IAAR,CAAa,iBAAb,CAAD,CAAzB,CAEA,GAAIvE,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQM,SAAd,CAA0B,GAA1B,EAAiCsD,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoDK,QAApD,CAA6DP,CAAI,CAAC1D,EAAL,CAAQY,WAArE,CAAJ,CAAuF,CACnFrB,CAAC,CAAC,IAAMmE,CAAI,CAAC1D,EAAL,CAAQO,UAAd,CAA2B,GAA3B,CAAiCqD,CAAlC,CAAD,CAA+CX,QAA/C,CAAwDS,CAAI,CAAC1D,EAAL,CAAQY,WAAhE,CACH,CACJ,CAND,EAQA,KAAKhB,WAAL,CAAmB,iBACtB,CA3dE,CA6dH6H,uBAAuB,CAAE,kCAAY,CACjClI,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAf,CAAD,CAA2B0C,WAA3B,CAAuC,KAAKhD,EAAL,CAAQY,WAA/C,EACArB,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQO,UAAf,CAAD,CAA4ByC,WAA5B,CAAwC,KAAKhD,EAAL,CAAQY,WAAhD,CAEH,CAjeE,CAweHuD,oBAAoB,CAAE,8BAAUuD,CAAV,CAAsB,CAExC,GAAIC,CAAAA,CAAgB,CAAG,KAAK7G,OAAL,CAAayB,eAAb,CAA6BL,MAApD,CACA,GAAyB,CAArB,GAAAyF,CAAJ,CAA4B,CACxB,MAAO,EACV,CAKD,OAFInB,CAAAA,CAAU,CAAG,CAAC,CAElB,CADIoB,CAAiB,CAAC,CAAC,CACvB,CAAShE,CAAU,CAAG8D,CAAtB,CAA+C,CAAb,CAAA9D,CAAlC,CAAkDA,CAAU,EAA5D,CAAgE,IAExDsC,CAAAA,CAAW,CAAG3G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQY,WAA/D,CAF0C,CAGxDiH,CAAY,CAAGtI,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQU,eAA/D,CAHyC,CAK5D,GAAI,CAACwF,CAAD,EAAgB,CAAC2B,CAArB,CAAmC,CAC/BrB,CAAU,CAAG,KAAK1F,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CkE,SAA7C,CAAyD,CAAtE,CACA,GAAIF,CAAAA,CAAiB,CAAChE,CAAtB,CACA,KACH,CACJ,CAKD,OAFI6C,CAAAA,CAAQ,CAAG,CAAC,CAEhB,CADIsB,CAAe,CAAC,CAAC,CACrB,CAASnE,CAAU,CAAG8D,CAAtB,CAEQxB,CAFR,CAAkCtC,CAAU,EAAI+D,CAAhD,CAAkE/D,CAAU,EAA5E,CAAgF,CAExEsC,CAFwE,CAE1D3G,CAAC,CAAC,IAAM,KAAKS,EAAL,CAAQM,SAAd,CAA0B,GAA1B,CAAgCsD,CAAjC,CAAD,CAA8CK,QAA9C,CAAuD,KAAKjE,EAAL,CAAQY,WAA/D,CAF0D,CAI5E,GAAI,CAACsF,CAAL,CAAkB,CACdO,CAAQ,CAAG,KAAK3F,OAAL,CAAauB,cAAb,CAA4B,GAAKuB,CAAjC,EAA6CkE,SAA7C,CAAyD,CAApE,CACAC,CAAe,CAACnE,CAAhB,CACA,KACH,CACJ,CAGD,GAAmB,CAAC,CAAhB,GAAA4C,CAAJ,CAAuB,CACnBA,CAAU,CAAG,CAChB,CAED,GAAIC,CAAQ,GAAKkB,CAAjB,CAAmC,CAC/BlB,CAAQ,CAAG,CAAC,CAGf,CAJD,IAIO,IAAiB,CAAb,GAAAA,CAAQ,EAAUA,CAAQ,CAAGD,CAAjC,CAA6C,CAChD,QACH,CA/CuC,GAkDpCR,CAAAA,CAAS,CAAG,KAAKH,kBAAL,CAAwB6B,CAAxB,CAlDwB,CAmDpC9B,CAAO,CAAG,KAAKN,gBAAL,CAAsBoC,CAAtB,CAnD0B,CAoDpCf,CAAW,CAAE,CApDuB,CAqDpCC,CAAU,CAAE,CArDwB,CAsDxC,GAAGgB,CAAiB,CAAG5B,CAAvB,CAAiC,CAC7B,GAAIW,CAAAA,CAAW,CAAGe,CAAU,CAAC1B,CAAX,CAAuB,CAC5C,CACD,GAAG+B,CAAe,CAAGnC,CAAlB,EAA8C,CAAC,CAAnB,EAAAmC,CAA/B,CAAoD,CAChD,GAAInB,CAAAA,CAAU,CAAGhB,CAAO,CAAE8B,CAAT,CAAqB,CACzC,CAED,GAAGf,CAAW,EAAIC,CAAlB,CAA6B,CACzB,QACH,CAED,GAAGD,CAAH,CAAe,CACXH,CAAU,CAAGC,CAAQ,CAAEE,CAAvB,CACA,GAAc,CAAX,CAAAH,CAAH,CAAgB,CAAC,QAAc,CAElC,CAJD,IAIM,IAAGI,CAAH,CAAc,CAChBH,CAAQ,CAAGD,CAAU,CAAEI,CAAvB,CACA,GAAGH,CAAQ,CAAC,CAACkB,CAAb,CAA8B,CAAC,QAAc,CAChD,CAKDnB,CAAU,GAGV,GAAIwB,CAAAA,CAAG,GAAP,CACA,GAAe,CAAX,CAAAvB,CAAJ,CAAkB,CACduB,CAAG,CAAG,KAAKlH,OAAL,CAAayB,eAAb,CAA6B0F,KAA7B,CAAmCzB,CAAnC,CAA+CC,CAA/C,EAAyDyB,IAAzD,CAA8D,GAA9D,CACT,CAFD,IAEO,CACHF,CAAG,CAAG,KAAKlH,OAAL,CAAayB,eAAb,CAA6B0F,KAA7B,CAAmCzB,CAAnC,EAA+C0B,IAA/C,CAAoD,GAApD,CACT,CACD,GAAmB,EAAf,GAAAF,CAAG,CAACG,IAAJ,EAAJ,CAAuB,CACnB,QACH,CAFD,IAEO,CACH,MAAOH,CAAAA,CACV,CACJ,CAnkBE,CAqkBHpF,eAAe,CAAE,0BAAY,CACzB,GAAIwF,CAAAA,CAAC,CAAG,IAAR,CACA,KAAKC,aAAL,GACA,GAAI,KAAKvH,OAAL,CAAaO,UAAb,EAA2B,KAAKxB,SAAL,CAAeE,qBAA9C,CAAqE,CACjER,CAAC,CAAC4H,IAAF,CAAOiB,CAAC,CAACtH,OAAF,CAAUE,UAAjB,CAA6B,SAAUoG,CAAV,CAAiB,CACtC7H,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKM,SAAX,CAAuB,GAAvB,CAA6B8H,CAAC,CAACtH,OAAF,CAAUE,UAAV,CAAqBoG,CAArB,EAA4BxD,UAA1D,CAAD,CAAuEX,QAAvE,CAAgFmF,CAAC,CAACpI,EAAF,CAAKQ,YAArF,CACH,CAFL,CAIH,CACJ,CA9kBE,CAglBHuC,YAAY,CAAE,uBAAW,IACjBqF,CAAAA,CAAC,CAAE,IADc,CAEjBE,CAAQ,CAAE,iBAAkBF,CAAC,CAACpI,EAAF,CAAKa,SAAvB,CAAmC,YAF5B,CAGrBtB,CAAC,CAAC4H,IAAF,CAAOiB,CAAC,CAACtH,OAAF,CAAUM,KAAjB,CAAwB,SAAUgG,CAAV,CAAiB,IAC9BmB,CAAAA,CAAY,CAAGhJ,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKM,SAAX,CAAuB,GAAvB,CAA6B8H,CAAC,CAACtH,OAAF,CAAUM,KAAV,CAAgBgG,CAAhB,EAAuBoB,KAArD,CADc,CAE9BC,CAAW,CAAIlJ,CAAC,CAAC+I,CAAD,CAAD,CAAYI,YAAZ,CAAyBH,CAAzB,CAFe,CAGlC,IAAI,GAAII,CAAAA,CAAC,CAACP,CAAC,CAACtH,OAAF,CAAUM,KAAV,CAAgBgG,CAAhB,EAAuBoB,KAAjC,CAAwCG,CAAC,EAAEP,CAAC,CAACtH,OAAF,CAAUM,KAAV,CAAgBgG,CAAhB,EAAuBwB,GAAlE,CAAsED,CAAC,EAAvE,CAA2E,CACvEF,CAAW,CAACI,MAAZ,CAAmBtJ,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKM,SAAX,CAAuB,GAAvB,CAA6BqI,CAA9B,CAApB,EACAF,CAAW,CAACI,MAAZ,CAAmBtJ,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKO,UAAX,CAAwB,GAAxB,CAA8BoI,CAA/B,CAApB,CACH,CACH,CAPL,CASH,CA5lBE,CAgmBHG,YAAY,CAAE,uBAAY,IAGlBV,CAAAA,CAAC,CAAG,IAHc,CAIlBxE,CAAU,CAAGrE,CAAC,CAAC,IAAD,CAAD,CAAQuE,IAAR,CAAa,iBAAb,CAJK,CAKlBZ,CAAQ,CAAG3D,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKO,UAAX,CAAwB,GAAxB,CAA8BqD,CAA/B,CALM,CAOtB,GAAIA,CAAU,GAAKwE,CAAC,CAACtH,OAAF,CAAUC,aAA7B,CAA4C,CACxCqH,CAAC,CAACtH,OAAF,CAAUC,aAAV,CAA0BqH,CAAC,CAACtH,OAAF,CAAUmB,cAApC,CACAiB,CAAQ,CAACF,WAAT,CAAqBoF,CAAC,CAACpI,EAAF,CAAKS,aAA1B,EACAlB,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKO,UAAX,CAAwB,GAAxB,CAA8B6H,CAAC,CAACtH,OAAF,CAAUmB,cAAzC,CAAD,CAA0DgB,QAA1D,CAAmEmF,CAAC,CAACpI,EAAF,CAAKS,aAAxE,CACH,CAJD,IAIO,CACHlB,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKO,UAAX,CAAwB,GAAxB,CAA8B6H,CAAC,CAACtH,OAAF,CAAUC,aAAzC,CAAD,CAAyDiC,WAAzD,CAAqEoF,CAAC,CAACpI,EAAF,CAAKS,aAA1E,EACA2H,CAAC,CAACtH,OAAF,CAAUC,aAAV,CAA0B6C,CAA1B,CACAV,CAAQ,CAACD,QAAT,CAAkBmF,CAAC,CAACpI,EAAF,CAAKS,aAAvB,CACH,CACD2H,CAAC,CAACC,aAAF,GACAD,CAAC,CAACW,aAAF,EACH,CAlnBE,CAonBHV,aAAa,CAAE,wBAAY,CACvB,GAAID,CAAAA,CAAC,CAAG,IAAR,CACAA,CAAC,CAACzI,QAAF,CAAW4D,QAAX,CAAoB4D,IAApB,CAAyB,UAAiB,IAClCvD,CAAAA,CAAU,CAAGrE,CAAC,CAAC,IAAD,CAAD,CAAQuE,IAAR,CAAa,iBAAb,CADqB,CAElCZ,CAAQ,CAAG3D,CAAC,CAAC,IAAM6I,CAAC,CAACpI,EAAF,CAAKO,UAAX,CAAwB,GAAxB,CAA8BqD,CAA/B,CAFsB,CAItC,GAAI,CAAOA,CAAP,EAA4BwE,CAAC,CAACtH,OAAF,CAAUC,aAA1C,CAA0D,CACtDxB,CAAC,CAAC,IAAD,CAAD,CAAQ0D,QAAR,CAAiBmF,CAAC,CAACpI,EAAF,CAAKU,eAAtB,EACAwC,CAAQ,CAACD,QAAT,CAAkBmF,CAAC,CAACpI,EAAF,CAAKW,gBAAvB,EAGA,GAAIyH,CAAC,CAACtH,OAAF,CAAUkI,aAAV,EAA2BpF,CAAU,GAAIwE,CAAAA,CAAC,CAACtH,OAAF,CAAUE,UAAvD,CAAmE,CAC/D,MAAOoH,CAAAA,CAAC,CAACtH,OAAF,CAAUE,UAAV,CAAqB4C,CAArB,CAAP,CACArE,CAAC,CAAC,IAAD,CAAD,CAAQyD,WAAR,CAAoBoF,CAAC,CAACpI,EAAF,CAAKQ,YAAzB,CACH,CACJ,CATD,IASO,CACHjB,CAAC,CAAC,IAAD,CAAD,CAAQyD,WAAR,CAAoBoF,CAAC,CAACpI,EAAF,CAAKU,eAAzB,EACAwC,CAAQ,CAACF,WAAT,CAAqBoF,CAAC,CAACpI,EAAF,CAAKW,gBAA1B,CACH,CACJ,CAjBD,CAkBH,CAxoBE,CA0oBV,CA/oBK,CAAN","sourcesContent":["define(['jquery', 'core/log', 'mod_pchat/popoverhelper'], function ($, log, popoverhelper) {\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('Passage Markup: initialising');\r\n\r\n    return {\r\n        //controls\r\n\r\n        controls: {},\r\n        currentmode: 'grading',\r\n\r\n        constants: {\r\n            REVIEWMODE_NOERRORS: 0,\r\n            REVIEWMODE_SHOWERRORS: 1\r\n        },\r\n\r\n        //class definitions\r\n        cd: {\r\n            passagecontainer: 'mod_pchat_grading_passagecont',\r\n            summarytranscript: 'mod_pchat_summarytranscript',\r\n            summarytranscriptplaceholder: 'mod_pchat_summarytranscriptplaceholder',\r\n            audioplayerclass: 'mod_pchat_passageaudioplayer',\r\n            wordplayerclass: 'mod_pchat_hidden_player',\r\n            wordclass: 'mod_pchat_grading_passageword',\r\n            spaceclass: 'mod_pchat_grading_passagespace',\r\n            badwordclass: 'mod_pchat_grading_badword',\r\n            endspaceclass: 'mod_pchat_grading_endspace',\r\n            unreadwordclass: 'mod_pchat_grading_unreadword',\r\n            unreadspaceclass: 'mod_pchat_grading_unreadspace',\r\n            aiunmatched: 'mod_pchat_aiunmatched',\r\n            turnclass: 'summarytranscriptpart'\r\n        },\r\n\r\n        options: {\r\n            endwordnumber: 0,\r\n            errorwords: {},\r\n            activityid: null,\r\n            attemptid: null,\r\n            sesskey: null,\r\n            turns: [],\r\n            reviewmode: 1 //this.constants.REVIEWMODE_SHOWERRORS\r\n        },\r\n\r\n\r\n        init: function (config) {\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + config['id'];\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                var opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('Passage Markup js: No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            //register the controls\r\n            this.register_controls();\r\n\r\n            //stash important info\r\n            this.options.activityid = opts['activityid'];\r\n            this.options.attemptid = opts['attemptid'];\r\n            this.options.sesskey = opts['sesskey'];\r\n            this.options.turns = opts['turns'];\r\n            this.options.totalwordcount = $('.' + this.cd.wordclass).length;\r\n\r\n            if (opts['sessiontime'] > 0) {\r\n                if (opts['sessionerrors'] !== '') {\r\n                    this.options.errorwords = JSON.parse(opts['sessionerrors']);\r\n                } else {\r\n                    this.options.errorwords = {};\r\n                }\r\n                this.options.totalseconds = opts['sessiontime'];\r\n                this.options.endwordnumber = opts['sessionendword'];\r\n                this.options.sessionscore = opts['sessionscore'];\r\n\r\n\r\n                //We may have session matches and AI data, if AI is turned on\r\n                if(opts['sessionmatches']) {\r\n                    this.options.sessionmatches = JSON.parse(opts['sessionmatches']);\r\n                }else{\r\n                    this.options.sessionmatches =[];\r\n                }\r\n                this.options.aidata = opts['aidata'];\r\n                if (this.options.aidata) {\r\n                    this.options.transcriptwords = opts['aidata'].transcript.split(\" \");\r\n\r\n                    //remove empty elements ... these can get in there\r\n                    this.options.transcriptwords = this.options.transcriptwords.filter(function (el) {\r\n                        return el !== '';\r\n                    });\r\n\r\n                } else {\r\n                    this.options.transcriptwords = [];\r\n                }\r\n\r\n                //if we have the AI data then visually, and internally mark up the mismatches\r\n                this.markup_badwords();\r\n                this.markup_aiunmatchedwords();\r\n                this.markup_aiunmatchedspaces();\r\n\r\n                //mark up turns\r\n                this.markup_turns();\r\n\r\n                //display passage turns nicely\r\n                $('.' + this.cd.passagecontainer).removeClass(this.cd.summarytranscriptplaceholder).addClass(this.cd.summarytranscript);\r\n\r\n\r\n            } else {\r\n                //set up our end passage marker\r\n                this.options.endwordnumber = this.options.totalwordcount;\r\n            }\r\n\r\n            //add the endword marker\r\n            var thespace = $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber);\r\n            thespace.addClass(this.cd.endspaceclass);\r\n\r\n            //register events\r\n            this.register_events();\r\n\r\n\r\n            //init our popover helper which sets up the button events\r\n            this.init_popoverhelper();\r\n\r\n        },\r\n\r\n        //set up events related to popover helper\r\n        init_popoverhelper: function () {\r\n            var that = this;\r\n\r\n            //init the popover now that we have set the correct callback event handling thingies\r\n            popoverhelper.init();\r\n        },\r\n\r\n        register_controls: function () {\r\n\r\n            this.controls.wordplayer = $('#' + this.cd.wordplayerclass);\r\n            this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\r\n            this.controls.eachword = $('.' + this.cd.wordclass);\r\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\r\n            this.controls.endwordmarker = $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber);\r\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\r\n\r\n        },\r\n\r\n        register_events: function () {\r\n            var that = this;\r\n            //set up event handlers\r\n\r\n\r\n            //Play audio from and to spot check part\r\n            this.controls.passagecontainer.on('click','.' + this.cd.wordclass, function () {\r\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                    //some clicks are opening popup, some are playing and some are closing popups\r\n                    //dont play when closing popups\r\n                    if (!popoverhelper.isShowing(this)) {\r\n                        that.doPlaySpotCheck(wordnumber);\r\n                    }\r\n\r\n                    if($(this).hasClass(that.cd.aiunmatched)){\r\n                        var chunk = that.fetchTranscriptChunk(wordnumber);\r\n                        if (chunk) {\r\n                            popoverhelper.addTranscript(this, chunk);\r\n                        }\r\n                    }\r\n\r\n            });\r\n\r\n        },\r\n\r\n\r\n        /*\r\n        * Here we fetch the playchain, start playing frm audiostart and add an event handler to stop at audioend\r\n         */\r\n        doPlaySpotCheck: function (spotcheckindex) {\r\n            var playchain = this.fetchWordPlayChain(spotcheckindex);\r\n            log.debug(playchain);\r\n            var theplayer = this.controls.audioplayer[0];\r\n            //we pad the play audio by 0.5 seconds beginning and end\r\n            var pad = 0.5;\r\n            var duration = theplayer.duration;\r\n            //determine starttime\r\n            var endtime = parseFloat(playchain.audioend);\r\n            if (!isNaN(duration) && duration > (endtime + pad)) {\r\n                endtime = endtime + pad;\r\n            }\r\n            //determine endtime\r\n            var starttime = parseFloat(playchain.audiostart);\r\n            if ((starttime - pad) > 0) {\r\n                starttime = starttime - pad;\r\n            }\r\n\r\n            theplayer.currentTime = starttime;\r\n            $(this.controls.audioplayer).off(\"timeupdate\");\r\n            $(this.controls.audioplayer).on(\"timeupdate\", function (e) {\r\n                var currenttime = theplayer.currentTime;\r\n                if (currenttime >= endtime) {\r\n                    $(this).off(\"timeupdate\");\r\n                    theplayer.pause();\r\n                }\r\n            });\r\n            theplayer.play();\r\n        },\r\n\r\n\r\n        fetchTurnEndWord: function(currentwordindex){\r\n            var currentword = $('#' + this.cd.wordclass + '_' + currentwordindex);\r\n            var turnendword = currentword.siblings('.' + this.cd.wordclass).last();\r\n            var turnend = turnendword.attr('data-wordnumber');\r\n            if(!turnend || turnend < currentwordindex ){\r\n                turnend = currentwordindex;\r\n            }\r\n            return turnend;\r\n\r\n        },\r\n\r\n        fetchTurnStartWord: function(currentwordindex){\r\n            var currentword = $('#' + this.cd.wordclass + '_' + currentwordindex);\r\n            var turnstartword = currentword.siblings('.' + this.cd.wordclass).first();\r\n            var turnstart = turnstartword.attr('data-wordnumber');\r\n            if(!turnstart || turnstart >currentwordindex ){\r\n                turnstart = currentwordindex;\r\n            }\r\n            return turnstart;\r\n\r\n        },\r\n\r\n\r\n        /*\r\n        * The playchain is all the words in a string of badwords.\r\n        * The complexity comes because a bad word  is usually one that isunmatched by AI.\r\n         */\r\n        fetchWordPlayChain: function (wordnumber) {\r\n            var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\r\n            var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n            if(isbad || isunmatched){\r\n                return this.fetchBadWordPlayChain(wordnumber);\r\n            }else{\r\n                var starttime = this.options.sessionmatches['' + wordnumber].audiostart;\r\n                var endtime = this.options.sessionmatches['' + wordnumber].audioend;\r\n                var playchain = {};\r\n                playchain.startword = wordnumber;\r\n                playchain.endword = wordnumber;\r\n                playchain.audiostart = starttime;\r\n                playchain.audioend = endtime;\r\n                return playchain;\r\n            }\r\n        },\r\n\r\n        /*\r\n        * The playchain is all the words in a string of badwords.\r\n        * The complexity comes because a bad word  is usually one that isunmatched by AI.\r\n        * So if the teacher clicks on a passage word that did not appear in the transcript, what should we play?\r\n        * Answer: All the words from the last known to the next known word. Hence we create a play chain\r\n        * For consistency, if the teacher flags matched words as bad, while we do know their precise location we still\r\n        * make a play chain. Its not a common situation probably.\r\n         */\r\n        fetchBadWordPlayChain: function (spotcheckindex) {\r\n\r\n            //The session matched words we use to get the audiostart and end\r\n            var audiostartword=0;\r\n            var audioendword=0;\r\n\r\n            //find startword\r\n            var startindex = spotcheckindex;\r\n            var starttime = -1;\r\n            for (var wordnumber = spotcheckindex; wordnumber > 0; wordnumber--) {\r\n                var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if current wordnumber part of the playchain, set it as the startindex.\r\n                // And get the audiotime if its a matched word. (we only know audiotime of matched words)\r\n                if (isbad || isunmatched) {\r\n                    startindex = wordnumber;\r\n                    if (!isunmatched) {\r\n                        starttime = this.options.sessionmatches['' + wordnumber].audiostart;\r\n                        audiostartword=wordnumber;\r\n                    } else {\r\n                        starttime = -1;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n            //if we have no starttime then we need to get the next matched word's audioend and use that\r\n            if (starttime === -1) {\r\n                starttime = 0;\r\n                for (var wordnumber = startindex - 1; wordnumber > 0; wordnumber--) {\r\n                    if (this.options.sessionmatches['' + wordnumber]) {\r\n                        starttime = this.options.sessionmatches['' + wordnumber].audioend;\r\n                        audiostartword=wordnumber;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //find endword\r\n            var endindex = spotcheckindex;\r\n            var endtime = -1;\r\n            var passageendword = this.options.totalwordcount;\r\n            for (var wordnumber = spotcheckindex; wordnumber <= passageendword; wordnumber++) {\r\n                var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if its part of the playchain, set it to startindex. And get time if its a matched word.\r\n                if (isbad || isunmatched) {\r\n                    endindex = wordnumber;\r\n                    if (!isunmatched) {\r\n                        endtime = this.options.sessionmatches['' + wordnumber].audioend;\r\n                        audioendword=wordnumber;\r\n                    } else {\r\n                        endtime = -1;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n            //if we have no endtime then we need to get the next matched word's audiostart and use that\r\n            if (endtime === -1) {\r\n                endtime = this.options.totalseconds;\r\n                for (var wordnumber = endindex + 1; wordnumber <= passageendword; wordnumber++) {\r\n                    if (this.options.sessionmatches['' + wordnumber]) {\r\n                        endtime = this.options.sessionmatches['' + wordnumber].audiostart;\r\n                        audioendword=wordnumber;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //work out the playchain\r\n            var playchain = {};\r\n            playchain.startword = startindex;\r\n            playchain.endword = parseInt(endindex);\r\n            playchain.audiostart = starttime;\r\n            playchain.audioend = parseInt(endtime);\r\n            //console.log('audiostart:' + starttime);\r\n            //console.log('audioend:' + endtime);\r\n\r\n            //here we adjust the playback if we have gone out of the turn\r\n            //its totally black magic guesswork, but it works ok\r\n            var turnstart = this.fetchTurnStartWord(spotcheckindex);\r\n            var turnend = this.fetchTurnEndWord(spotcheckindex);\r\n            var beforelimit =0;\r\n            var afterlimit =0;\r\n            var startadjust =0;\r\n            var endadjust =0;\r\n            if(audiostartword > 0 && audiostartword < turnstart){\r\n                beforelimit = spotcheckindex-turnstart + 1;\r\n            }\r\n            if(audioendword > turnend){\r\n                afterlimit = turnend -spotcheckindex+ 1;\r\n            }\r\n            //no point trying to guess a completely mismatched turn.\r\n            if(beforelimit && afterlimit){\r\n                //give up ... what a disaster\r\n            }else {\r\n                //if the start is out of the turn\r\n                if (beforelimit) {\r\n                    startadjust = 0.5 * beforelimit;\r\n                    playchain.audiostart = playchain.audioend - startadjust;\r\n                    console.log('startadjust:' + startadjust);\r\n\r\n                    //if the end is out of the turn\r\n                } else if (afterlimit) {\r\n                    endadjust = 0.7 * afterlimit;\r\n                    playchain.audioend = playchain.audiostart + endadjust;\r\n                    console.log('endadjust:' + startadjust);\r\n                }\r\n            }\r\n            console.log(playchain);\r\n            return playchain;\r\n\r\n        },\r\n\r\n        /*\r\n        * Here we mark up the passage for spotcheck mode. This will make up the spaces and the words as either badwords\r\n        * or aiunmatched words. We need to create playchains so aiunmatched still is indeicated visibly even where its\r\n        * not a badword (ie has been corrected)\r\n         */\r\n        doSpotCheckMode: function () {\r\n            var that = this;\r\n\r\n            //mark up all ai unmatched words as aiunmatched\r\n            this.markup_aiunmatchedwords();\r\n\r\n            //mark up all badwords as spotcheck words\r\n            $('.' + this.cd.badwordclass).addClass(this.cd.spotcheckmode);\r\n\r\n            //mark up spaces between spotcheck word and spotcheck/aiunmatched word (bad spaces)\r\n            //this.markup_badspaces();\r\n\r\n            //mark up spaces between aiunmatched word and spotcheck/aiunmatched word (aiunmatched spaces)\r\n            this.markup_aiunmatchedspaces();\r\n\r\n            this.currentmode = \"spotcheck\";\r\n        },\r\n\r\n        //mark up all ai unmatched words as aiunmatched\r\n        markup_aiunmatchedwords: function () {\r\n            var that = this;\r\n            if (this.options.sessionmatches) {\r\n                var prevmatch = 0;\r\n                $.each(this.options.sessionmatches, function (index, match) {\r\n                    var unmatchedcount = index - prevmatch - 1;\r\n                    if (unmatchedcount > 0) {\r\n                        for (var errorword = 1; errorword < unmatchedcount + 1; errorword++) {\r\n                            var wordnumber = prevmatch + errorword;\r\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                        }\r\n                    }\r\n                    prevmatch = parseInt(index);\r\n                });\r\n\r\n                //mark all words from last matched word to the end as aiunmatched\r\n                for (var errorword = prevmatch + 1; errorword <= this.options.endwordnumber; errorword++) {\r\n                    $('#' + that.cd.wordclass + '_' + errorword).addClass(that.cd.aiunmatched);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n\r\n\r\n        markup_aiunmatchedspaces: function () {\r\n            var that = this;\r\n            $('.' + this.cd.wordclass + '.' + this.cd.aiunmatched).each(function (index) {\r\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                //build chains (highlight spaces) of badwords or aiunmatched\r\n                if ($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.spotcheckmode) ||\r\n                    $('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\r\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        undoSpotCheckMode: function () {\r\n            $('.' + this.cd.badwordclass).removeClass(this.cd.spotcheckmode);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.spotcheckmode);\r\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\r\n            $(this.controls.audioplayer).off(\"timeupdate\");\r\n            popoverhelper.remove();\r\n        },\r\n\r\n        /*\r\n       * Here we mark up the passage for transcriptcheck mode.\r\n        */\r\n        doTranscriptCheckMode: function () {\r\n            var that = this;\r\n            //mark up all ai unmatched words as transcriptcheck\r\n            if (this.options.sessionmatches) {\r\n                var prevmatch = 0;\r\n                $.each(this.options.sessionmatches, function (index, match) {\r\n                    var unmatchedcount = index - prevmatch - 1;\r\n                    if (unmatchedcount > 0) {\r\n                        for (var errorword = 1; errorword < unmatchedcount + 1; errorword++) {\r\n                            var wordnumber = prevmatch + errorword;\r\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                        }\r\n                    }\r\n                    prevmatch = parseInt(index);\r\n                });\r\n\r\n                //mark all words from last matched word to the end as aiunmatched\r\n                for (var errorword = prevmatch + 1; errorword <= this.options.endwordnumber; errorword++) {\r\n                    $('#' + that.cd.wordclass + '_' + errorword).addClass(that.cd.aiunmatched);\r\n                }\r\n            }\r\n\r\n            //mark up spaces between aiunmatched word and aiunmatched (bad spaces)\r\n            $('.' + this.cd.aiunmatched).each(function (index) {\r\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                //build chains (highlight spaces) of badwords or aiunmatched\r\n                if ($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\r\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                }\r\n            });\r\n\r\n            this.currentmode = \"transcriptcheck\";\r\n        },\r\n\r\n        undoTranscriptCheckMode: function () {\r\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\r\n   //         popoverhelper.remove();\r\n        },\r\n\r\n\r\n        /*\r\n       * This will take a wordindex and find the previous and next transcript indexes that were matched and\r\n       * return all the transcript words in between those.\r\n        */\r\n        fetchTranscriptChunk: function (checkindex) {\r\n\r\n            var transcriptlength = this.options.transcriptwords.length;\r\n            if (transcriptlength === 0) {\r\n                return \"\";\r\n            }\r\n\r\n            //find startindex\r\n            var startindex = -1;\r\n            var startpassageindex=-1;\r\n            for (var wordnumber = checkindex; wordnumber > 0; wordnumber--) {\r\n\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                var isunreadword = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.unreadwordclass);\r\n                //if we matched then the subsequent transcript word is the last unmatched one in the checkindex sequence\r\n                if (!isunmatched && !isunreadword) {\r\n                    startindex = this.options.sessionmatches['' + wordnumber].tposition + 1;\r\n                    var startpassageindex=wordnumber;\r\n                    break;\r\n                }\r\n            }//end of for loop\r\n\r\n            //find endindex\r\n            var endindex = -1;\r\n            var endpassageindex=-1;\r\n            for (var wordnumber = checkindex; wordnumber <= transcriptlength; wordnumber++) {\r\n\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if we matched then the previous transcript word is the last unmatched one in the checkindex sequence\r\n                if (!isunmatched) {\r\n                    endindex = this.options.sessionmatches['' + wordnumber].tposition - 1;\r\n                    endpassageindex=wordnumber;\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n\r\n            //if there was no previous matched word, we set start to 1\r\n            if (startindex === -1) {\r\n                startindex = 1;\r\n            }\r\n            //if there was no subsequent matched word we flag the end as the -1\r\n            if (endindex === transcriptlength) {\r\n                endindex = -1;\r\n                //an edge case is where the first word is not in transcript and first match is the second or later passage\r\n                //word. It might not be possible for endindex to be lower than start index, but we don't want it anyway\r\n            } else if (endindex === 0 || endindex < startindex) {\r\n                return false;\r\n            }\r\n\r\n            //here we check if we have gone out of the turn\r\n            var turnstart = this.fetchTurnStartWord(checkindex);\r\n            var turnend = this.fetchTurnEndWord(checkindex);\r\n            var beforelimit =0;\r\n            var afterlimit =0;\r\n            if(startpassageindex < turnstart){\r\n                var beforelimit = checkindex-turnstart + 1;\r\n            }\r\n            if(endpassageindex > turnend ||endpassageindex ==-1){\r\n                var afterlimit = turnend -checkindex+ 1;\r\n            }\r\n            //no point trying to guess a completely mismatched turn.\r\n            if(beforelimit && afterlimit){\r\n                return false;\r\n            }\r\n            //if the start is out of the turn\r\n            if(beforelimit){\r\n                startindex = endindex -beforelimit;\r\n                if(startindex<1){return false;}\r\n                //if the end is out of the turn\r\n            }else if(afterlimit){\r\n                endindex = startindex +afterlimit;\r\n                if(endindex>+transcriptlength){return false;}\r\n            }\r\n\r\n            //up until this point the indexes have started from 1, since the passage word numbers start from 1\r\n            //but the transcript array is 0 based so we adjust. array splice function does not include item and endindex\r\n            ///so it needs to be one more then start index. hence we do not adjust that\r\n            startindex--;\r\n\r\n            //finally we return the section\r\n            var ret = false;\r\n            if (endindex > 0) {\r\n                ret = this.options.transcriptwords.slice(startindex, endindex).join(\" \");\r\n            } else {\r\n                ret = this.options.transcriptwords.slice(startindex).join(\" \");\r\n            }\r\n            if (ret.trim() === '') {\r\n                return false;\r\n            } else {\r\n                return ret;\r\n            }\r\n        },\r\n\r\n        markup_badwords: function () {\r\n            var m = this;\r\n            this.processunread();\r\n            if (this.options.reviewmode == this.constants.REVIEWMODE_SHOWERRORS) {\r\n                $.each(m.options.errorwords, function (index) {\r\n                        $('#' + m.cd.wordclass + '_' + m.options.errorwords[index].wordnumber).addClass(m.cd.badwordclass);\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        markup_turns: function() {\r\n            var m= this;\r\n            var turnspan ='<span class=\"' + m.cd.turnclass + '\"></span>';\r\n            $.each(m.options.turns, function (index) {\r\n                   var startelement = $('#' + m.cd.wordclass + '_' + m.options.turns[index].start);\r\n                   var newturnspan  = $(turnspan).insertBefore(startelement);;\r\n                   for(var i=m.options.turns[index].start; i<=m.options.turns[index].end;i++) {\r\n                       newturnspan.append($('#' + m.cd.wordclass + '_' + i));\r\n                       newturnspan.append($('#' + m.cd.spaceclass + '_' + i));\r\n                   }\r\n                }\r\n            );\r\n        },\r\n\r\n\r\n        //this function is never called it seems ....\r\n        processspace: function () {\r\n            //this event is entered by  click on space\r\n            //it relies on attr data-wordnumber being set correctly\r\n            var m = this;\r\n            var wordnumber = $(this).attr('data-wordnumber');\r\n            var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\r\n\r\n            if (wordnumber === m.options.endwordnumber) {\r\n                m.options.endwordnumber = m.options.totalwordcount;\r\n                thespace.removeClass(m.cd.endspaceclass);\r\n                $('#' + m.cd.spaceclass + '_' + m.options.totalwordcount).addClass(m.cd.endspaceclass);\r\n            } else {\r\n                $('#' + m.cd.spaceclass + '_' + m.options.endwordnumber).removeClass(m.cd.endspaceclass);\r\n                m.options.endwordnumber = wordnumber;\r\n                thespace.addClass(m.cd.endspaceclass);\r\n            }\r\n            m.processunread();\r\n            m.processscores();\r\n        },\r\n\r\n        processunread: function () {\r\n            var m = this;\r\n            m.controls.eachword.each(function (index) {\r\n                var wordnumber = $(this).attr('data-wordnumber');\r\n                var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\r\n\r\n                if (Number(wordnumber) > Number(m.options.endwordnumber)) {\r\n                    $(this).addClass(m.cd.unreadwordclass);\r\n                    thespace.addClass(m.cd.unreadspaceclass);\r\n\r\n                    //this will clear badwords after the endmarker\r\n                    if (m.options.enforcemarker && wordnumber in m.options.errorwords) {\r\n                        delete m.options.errorwords[wordnumber];\r\n                        $(this).removeClass(m.cd.badwordclass);\r\n                    }\r\n                } else {\r\n                    $(this).removeClass(m.cd.unreadwordclass);\r\n                    thespace.removeClass(m.cd.unreadspaceclass);\r\n                }\r\n            });\r\n        }\r\n    };\r\n});"],"file":"passagemarkup.min.js"}