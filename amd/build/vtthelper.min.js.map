{"version":3,"sources":["../src/vtthelper.js"],"names":["define","$","convertVttToJson","vttString","current","sections","tidyexp","start","that","vttArray","split","forEach","line","nicerline","replace","indexOf","push","clone","timeString2ms","trimRight","pop","end","trimLeft","shift","part","length","section","convertJsonToVtt","thejson","ret","each","index","item","ms2TimeString","validateTimeString","rawstring","trim","bits","reg","bit","strbit","test","hours","parseInt","mins","secondbits","secs","millisecs","a","b","k","s","m","h","obj","copy","constructor","attr","hasOwnProperty"],"mappings":"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","sourcesContent":["define([\"jquery\"], function($) {\r\n  return {\r\n\r\n      //borrowed and altered from : https://github.com/dsslimshaddy/vtt-to-json/blob/master/index.js\r\n      convertVttToJson: function(vttString) {\r\n\r\n           var current = {};\r\n           var sections = [];\r\n          var tidyexp = /<\\/?[^>]+(>|$)/g;\r\n           var start =  false;\r\n           var that = this;\r\n\r\n           var vttArray = vttString.split('\\n');\r\n            vttArray.forEach(function(line, index){\r\n\r\n                var nicerline = line.replace(tidyexp, \"\");\r\n\r\n                if (nicerline === \" \"){\r\n                    //do what?\r\n                } else if (nicerline == \"\") {\r\n                        //do what?\r\n                } else if (line.indexOf('-->') !== -1 ) {\r\n                    start = true;\r\n\r\n                    if (current.start ) {\r\n                        sections.push(that.clone(current));\r\n                    }\r\n\r\n                    current = {\r\n                        start: that.timeString2ms(line.split(\"-->\")[0].trimRight().split(\" \").pop()),\r\n                        end: that.timeString2ms(line.split(\"-->\")[1].trimLeft().split(\" \").shift()),\r\n                        part: ''\r\n                    }\r\n                } else {\r\n                    if (start){\r\n                        if (sections.length !== 0) {\r\n                            if (sections[sections.length - 1].part.replace(tidyexp, \"\") === line.replace(nicerline, \"\")) {\r\n                                //do what?\r\n                            } else {\r\n                                //if current part is empty, just set it\r\n                                if (current.part.length === 0) {\r\n                                    current.part = line;\r\n                                //if its partyly full, add to it\r\n                                } else {\r\n                                    current.part = current.part +  \" \" +  line;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            current.part = line;\r\n                            sections.push(that.clone(current));\r\n\r\n                            //clear the current section ( so it is not added again)\r\n                            //this means very first transcription can not have two lines ...nor last one ...ok\r\n                            current.start = false;\r\n                            current.end = false;\r\n                            current.part = '';\r\n                        }\r\n                    }\r\n                }\r\n        });\r\n\r\n         //if we got to the end but we have an unpushed current, we push that to our return array here\r\n          // If it's the last line of the transcriptions\r\n          if (current.start) {\r\n              sections.push(that.clone(current));\r\n          }\r\n\r\n        sections.forEach(function(section){\r\n            section.part = section.part.replace(tidyexp, \"\")\r\n        });\r\n        return(sections);\r\n    },\r\n\r\n      //borrowed and altered from https://github.com/linclark/vtt-json/blob/0.0.x/lib/vtt-serializer.js\r\n    convertJsonToVtt: function(thejson){\r\n          var ret = \"WEBVTT\";\r\n          ret +='\\n\\n';\r\n          var that = this;\r\n          $.each(thejson,function(index,item) {\r\n              var start = that.ms2TimeString(item.start);\r\n              var end = that.ms2TimeString(item.end);\r\n              ret += start + ' --> ' + end + '\\n';\r\n              ret += item.part + '\\n';\r\n              ret +='\\n';\r\n          });\r\n        return ret;\r\n    },\r\n\r\n      //we use this to make sure that the string we will pass for conversion to ms, is well formed\r\n      validateTimeString: function(rawstring){\r\n        if(!rawstring){return false;}\r\n        rawstring=rawstring.trim();\r\n        var bits = rawstring.split(':');\r\n        if(bits.length!==3){return false;}\r\n         var reg = new RegExp('^[0-9]+$');\r\n        for(var bit=0; bit <=3;bit++){\r\n            var strbit = bits[bit];\r\n\r\n            switch(bit){\r\n                //hours\r\n                case 0:\r\n                    if(!reg.test(strbit)){\r\n                        return false;\r\n                    }\r\n                    var hours = parseInt(strbit);\r\n                    if(hours <0 || hours > 23){return false;}\r\n                    break;\r\n\r\n                //mins\r\n                case 1:\r\n                    if(!reg.test(strbit)){\r\n                        return false;\r\n                    }\r\n                    var mins = parseInt(strbit);\r\n                    if(mins <0 || mins > 59){return false;}\r\n                    break;\r\n                case 2:\r\n                    var secondbits = strbit.split('.');\r\n                    if(secondbits.length != 2){\r\n                        return false;\r\n                    }\r\n                    var secs = secondbits[0];\r\n                    var millisecs = secondbits[1];\r\n\r\n                    //test seconds\r\n                    if(!reg.test(secs)){\r\n                        return false;\r\n                    }\r\n                    var secs = parseInt(secs);\r\n                    if(secs <0 || secs > 59){return false;}\r\n\r\n                    //test millisecs\r\n                    if(!reg.test(millisecs)){\r\n                        return false;\r\n                    }\r\n                    var millisecs = parseInt(millisecs);\r\n                    if(millisecs <0 || millisecs > 999){return false;}\r\n                    break;\r\n            }\r\n          }\r\n         return true;\r\n      },\r\n\r\n    // helpers\r\n    //largely incomprehensible time functions from here...\r\n    //   http://codereview.stackexchange.com/questions/45335/milliseconds-to-time-string-time-string-to-milliseconds\r\n        timeString2ms: function(a,b){// time(HH:MM:SS.mss) // optimized\r\n            //console.log(a);\r\n            //console.log(this.validateTimeString(a));\r\n            return a=a.split('.'), // optimized\r\n                b=a[1]*1||0, // optimized\r\n                a=a[0].split(':'),\r\n            b+(a[2]?a[0]*3600+a[1]*60+a[2]*1:a[1]?a[0]*60+a[1]*1:a[0]*1)*1e3 // optimized\r\n        },\r\n\r\n      ms2TimeString: function(a,k,s,m,h){\r\n        return k=a%1e3, // optimized by konijn\r\n                s=a/1e3%60|0,\r\n                m=a/6e4%60|0,\r\n                h=a/36e5%24|0,\r\n            (h?(h<10?'0'+h:h)+':':'00:')+ // optimized\r\n            (m<10?0:'')+m+':'+  // optimized\r\n            (s<10?0:'')+s+'.'+ // optimized\r\n            (k<100?k<10?'00':0:'')+k // optimized\r\n        },\r\n\r\n        clone: function(obj) {\r\n            if (null == obj || \"object\" != typeof obj) return obj;\r\n            var copy = obj.constructor();\r\n            for (var attr in obj) {\r\n                if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n            }\r\n            return copy;\r\n        }\r\n\r\n    }\r\n});\r\n"],"file":"vtthelper.min.js"}