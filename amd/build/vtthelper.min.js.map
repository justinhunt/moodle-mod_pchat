{"version":3,"file":"vtthelper.min.js","sources":["../src/vtthelper.js"],"sourcesContent":["define([\"jquery\"], function($) {\r\n  return {\r\n\r\n      //borrowed and altered from : https://github.com/dsslimshaddy/vtt-to-json/blob/master/index.js\r\n      convertVttToJson: function(vttString) {\r\n\r\n           var current = {};\r\n           var sections = [];\r\n          var tidyexp = /<\\/?[^>]+(>|$)/g;\r\n           var start =  false;\r\n           var that = this;\r\n\r\n           var vttArray = vttString.split('\\n');\r\n            vttArray.forEach(function(line, index){\r\n\r\n                var nicerline = line.replace(tidyexp, \"\");\r\n\r\n                if (nicerline === \" \"){\r\n                    //do what?\r\n                } else if (nicerline == \"\") {\r\n                        //do what?\r\n                } else if (line.indexOf('-->') !== -1 ) {\r\n                    start = true;\r\n\r\n                    if (current.start ) {\r\n                        sections.push(that.clone(current));\r\n                    }\r\n\r\n                    current = {\r\n                        start: that.timeString2ms(line.split(\"-->\")[0].trimRight().split(\" \").pop()),\r\n                        end: that.timeString2ms(line.split(\"-->\")[1].trimLeft().split(\" \").shift()),\r\n                        part: ''\r\n                    }\r\n                } else {\r\n                    if (start){\r\n                        if (sections.length !== 0) {\r\n                            if (sections[sections.length - 1].part.replace(tidyexp, \"\") === line.replace(nicerline, \"\")) {\r\n                                //do what?\r\n                            } else {\r\n                                //if current part is empty, just set it\r\n                                if (current.part.length === 0) {\r\n                                    current.part = line;\r\n                                //if its partyly full, add to it\r\n                                } else {\r\n                                    current.part = current.part +  \" \" +  line;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            current.part = line;\r\n                            sections.push(that.clone(current));\r\n\r\n                            //clear the current section ( so it is not added again)\r\n                            //this means very first transcription can not have two lines ...nor last one ...ok\r\n                            current.start = false;\r\n                            current.end = false;\r\n                            current.part = '';\r\n                        }\r\n                    }\r\n                }\r\n        });\r\n\r\n         //if we got to the end but we have an unpushed current, we push that to our return array here\r\n          // If it's the last line of the transcriptions\r\n          if (current.start) {\r\n              sections.push(that.clone(current));\r\n          }\r\n\r\n        sections.forEach(function(section){\r\n            section.part = section.part.replace(tidyexp, \"\")\r\n        });\r\n        return(sections);\r\n    },\r\n\r\n      //borrowed and altered from https://github.com/linclark/vtt-json/blob/0.0.x/lib/vtt-serializer.js\r\n    convertJsonToVtt: function(thejson){\r\n          var ret = \"WEBVTT\";\r\n          ret +='\\n\\n';\r\n          var that = this;\r\n          $.each(thejson,function(index,item) {\r\n              var start = that.ms2TimeString(item.start);\r\n              var end = that.ms2TimeString(item.end);\r\n              ret += start + ' --> ' + end + '\\n';\r\n              ret += item.part + '\\n';\r\n              ret +='\\n';\r\n          });\r\n        return ret;\r\n    },\r\n\r\n      //we use this to make sure that the string we will pass for conversion to ms, is well formed\r\n      validateTimeString: function(rawstring){\r\n        if(!rawstring){return false;}\r\n        rawstring=rawstring.trim();\r\n        var bits = rawstring.split(':');\r\n        if(bits.length!==3){return false;}\r\n         var reg = new RegExp('^[0-9]+$');\r\n        for(var bit=0; bit <=3;bit++){\r\n            var strbit = bits[bit];\r\n\r\n            switch(bit){\r\n                //hours\r\n                case 0:\r\n                    if(!reg.test(strbit)){\r\n                        return false;\r\n                    }\r\n                    var hours = parseInt(strbit);\r\n                    if(hours <0 || hours > 23){return false;}\r\n                    break;\r\n\r\n                //mins\r\n                case 1:\r\n                    if(!reg.test(strbit)){\r\n                        return false;\r\n                    }\r\n                    var mins = parseInt(strbit);\r\n                    if(mins <0 || mins > 59){return false;}\r\n                    break;\r\n                case 2:\r\n                    var secondbits = strbit.split('.');\r\n                    if(secondbits.length != 2){\r\n                        return false;\r\n                    }\r\n                    var secs = secondbits[0];\r\n                    var millisecs = secondbits[1];\r\n\r\n                    //test seconds\r\n                    if(!reg.test(secs)){\r\n                        return false;\r\n                    }\r\n                    var secs = parseInt(secs);\r\n                    if(secs <0 || secs > 59){return false;}\r\n\r\n                    //test millisecs\r\n                    if(!reg.test(millisecs)){\r\n                        return false;\r\n                    }\r\n                    var millisecs = parseInt(millisecs);\r\n                    if(millisecs <0 || millisecs > 999){return false;}\r\n                    break;\r\n            }\r\n          }\r\n         return true;\r\n      },\r\n\r\n    // helpers\r\n    //largely incomprehensible time functions from here...\r\n    //   http://codereview.stackexchange.com/questions/45335/milliseconds-to-time-string-time-string-to-milliseconds\r\n        timeString2ms: function(a,b){// time(HH:MM:SS.mss) // optimized\r\n            //console.log(a);\r\n            //console.log(this.validateTimeString(a));\r\n            return a=a.split('.'), // optimized\r\n                b=a[1]*1||0, // optimized\r\n                a=a[0].split(':'),\r\n            b+(a[2]?a[0]*3600+a[1]*60+a[2]*1:a[1]?a[0]*60+a[1]*1:a[0]*1)*1e3 // optimized\r\n        },\r\n\r\n      ms2TimeString: function(a,k,s,m,h){\r\n        return k=a%1e3, // optimized by konijn\r\n                s=a/1e3%60|0,\r\n                m=a/6e4%60|0,\r\n                h=a/36e5%24|0,\r\n            (h?(h<10?'0'+h:h)+':':'00:')+ // optimized\r\n            (m<10?0:'')+m+':'+  // optimized\r\n            (s<10?0:'')+s+'.'+ // optimized\r\n            (k<100?k<10?'00':0:'')+k // optimized\r\n        },\r\n\r\n        clone: function(obj) {\r\n            if (null == obj || \"object\" != typeof obj) return obj;\r\n            var copy = obj.constructor();\r\n            for (var attr in obj) {\r\n                if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n            }\r\n            return copy;\r\n        }\r\n\r\n    }\r\n});\r\n"],"names":["define","$","convertVttToJson","vttString","current","sections","tidyexp","start","that","this","split","forEach","line","index","nicerline","replace","indexOf","push","clone","timeString2ms","trimRight","pop","end","trimLeft","shift","part","length","section","convertJsonToVtt","thejson","ret","each","item","ms2TimeString","validateTimeString","rawstring","bits","trim","reg","RegExp","bit","strbit","test","hours","parseInt","mins","secondbits","secs","millisecs","a","b","k","s","m","h","obj","copy","constructor","attr","hasOwnProperty"],"mappings":"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"}