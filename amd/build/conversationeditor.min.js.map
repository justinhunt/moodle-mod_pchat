{"version":3,"file":"conversationeditor.min.js","sources":["../src/conversationeditor.js"],"sourcesContent":["define([\"jquery\", \"mod_pchat/definitions\", \"mod_pchat/conversationconstants\", \"mod_pchat/vtthelper\",\"mod_pchat/conversationset\",\"mod_pchat/playerhelper\",\"core/templates\"],\r\n    function($, def, constants, vtthelper, transcriptionset, playerhelper,templates) {\r\n\r\n    //pooodlltranscription helper is about the transcription tiles and editing\r\n\r\n  return {\r\n      controls: {},\r\n      currentindex: false,\r\n      currentitemcontainer: null,\r\n      editoropen: false,\r\n      firstrender: true,\r\n\r\n      //set up the transcription edit session\r\n      init: function(transcriptiondata,mediatype){\r\n          transcriptionset.init(transcriptiondata);\r\n          playerhelper.init(mediatype);\r\n          this.initControls();\r\n          this.initTiles();\r\n          this.initEvents();\r\n      },\r\n\r\n      //set up our internal references to the elements on the page\r\n      initControls: function(){\r\n          this.controls.container = $(\"#poodllconvedit_tiles\");\r\n          this.controls.editor = $(\"#poodllconvedit_editor\");\r\n          this.controls.number = $(\"#poodllconvedit_editor .numb_song\");\r\n          this.controls.edpart = $(\"#\" + def.C_EDITFIELD);\r\n          this.controls.buttondelete = $(\"#\" + def.C_BUTTONDELETE);\r\n          this.controls.buttonmoveup = $(\"#\" + def.C_BUTTONMOVEUP);\r\n          this.controls.buttonmovedown = $(\"#\" + def.C_BUTTONMOVEDOWN);\r\n          this.controls.buttonapply = $(\"#\" + def.C_BUTTONAPPLY);\r\n          this.controls.buttoncancel = $(\"#\" + def.C_BUTTONCANCEL);\r\n          this.controls.buttonaddnew = $(\"#poodllconvedit_addnew\");\r\n;\r\n      },\r\n\r\n      hideEditor: function(){\r\n          this.controls.editor.detach();\r\n          this.controls.editor.hide();\r\n          this.editoropen=false;\r\n      },\r\n\r\n      restoreTile: function(){\r\n         var item = transcriptionset.fetchItem(this.currentindex);\r\n         var that=this;\r\n\r\n          var onend = function(tile){\r\n              that.hideEditor();\r\n              that.currentitemcontainer.append(tile);\r\n          };\r\n         this.fetchNewTextTile(this.currentindex,item.part, onend);\r\n\r\n      },\r\n\r\n      editorToTile: function(controls,currentindex,currentitemcontainer, onend){\r\n          var part = $(controls.edpart).val();\r\n          transcriptionset.updateItem(currentindex,part);\r\n          this.doSave();\r\n\r\n          var that = this;\r\n          var on_fetch_finish = function(tile){\r\n              //occasionally two event handlers will fire this and we get two tiles in one\r\n              //this is an ugly check to prevent that\r\n              if(!that.editoropen){return;}\r\n\r\n              that.hideEditor();\r\n              currentitemcontainer.append(tile);\r\n              $(currentitemcontainer).removeClass('warning');\r\n              if(onend){\r\n                  onend();\r\n              }\r\n          };\r\n          this.fetchNewTextTile(currentindex,part, on_fetch_finish);\r\n          return true;\r\n\r\n      },\r\n\r\n      //attach events to the elements on the page\r\n      initEvents: function(){\r\n          var that = this;\r\n          //this attaches event to classes of poodllconvedit_tt in \"container\"\r\n          //so new items(created at runtime) get events by default\r\n          this.controls.container.on(\"click\",'.poodllconvedit_tt',function(){\r\n              var newindex = parseInt($(this).parent().attr('data-id'));\r\n              var theparent = $(this).parent();\r\n              var do_next_tile_edit = function(){\r\n                  that.currentindex = newindex;\r\n                  that.currentitemcontainer = theparent;\r\n                  that.shiftEditor(that.currentindex ,that.currentitemcontainer);\r\n              }\r\n              //save current\r\n              if(that.editoropen === true){\r\n\r\n                  that.editorToTile(that.controls,that.currentindex,that.currentitemcontainer, do_next_tile_edit);\r\n              }else{\r\n                  do_next_tile_edit();\r\n              }\r\n\r\n\r\n           });\r\n\r\n          //editor button delete tile click event\r\n          this.controls.container.on(\"click\",'#' + def.C_BUTTONDELETE,function(){\r\n          //this.controls.buttondelete.click(function(){\r\n              result = confirm('Warning! This tile is going to be deleted!');\r\n              if (result) {\r\n                that.restoreTile();\r\n                transcriptionset.removeItem(that.currentindex);\r\n                that.syncFrom(that.currentindex);\r\n\r\n              } else {\r\n                  return;\r\n              }\r\n\r\n          });\r\n\r\n          //editor button merge with prev tile click event\r\n          this.controls.container.on(\"click\",'#' + def.C_BUTTONMOVEUP,function(){\r\n              var onend = function(){\r\n                  transcriptionset.moveup(that.currentindex);\r\n                  that.syncFrom(that.currentindex-1);\r\n                  that.doSave();\r\n              }\r\n              that.editorToTile(that.controls,that.currentindex,that.currentitemcontainer, onend);\r\n\r\n\r\n          });\r\n\r\n          //editor button split current tile click event\r\n          this.controls.container.on(\"click\",'#' + def.C_BUTTONMOVEDOWN,function(){\r\n              var onend = function(){\r\n                  transcriptionset.movedown(that.currentindex);\r\n                  that.syncFrom(that.currentindex);\r\n                  that.doSave();\r\n              }\r\n              that.editorToTile(that.controls,that.currentindex,that.currentitemcontainer, onend);\r\n\r\n          });\r\n\r\n\r\n          //editor button apply changesclick event\r\n          this.controls.container.on(\"click\",'#' + def.C_BUTTONAPPLY,function(){\r\n              that.editorToTile(that.controls,that.currentindex,that.currentitemcontainer);\r\n          });\r\n\r\n          //if the user clicks out of the editor (probably by clicking the form \"next button)\r\n          //editor button apply changesclick event\r\n          this.controls.container.on(\"focusout\",function(){\r\n              that.editorToTile(that.controls,that.currentindex,that.currentitemcontainer);\r\n          });\r\n\r\n\r\n          //editor button cancel changes click event\r\n          this.controls.container.on(\"click\",'#' + def.C_BUTTONCANCEL,function(){\r\n              that.restoreTile();\r\n          });\r\n\r\n\r\n          //\"Add new tile\" button click event\r\n          this.controls.buttonaddnew.click(function(){\r\n              var currentcount = transcriptionset.fetchCount();\r\n              var newdataid=currentcount;\r\n              if(currentcount >0){\r\n                  var lastitem = transcriptionset.fetchItem(currentcount-1);\r\n              }\r\n\r\n              transcriptionset.addItem(newdataid,'');\r\n\r\n              var onend = function(newtile){\r\n                  //append new tile\r\n                  that.controls.container.append(newtile);\r\n                  //its likely you want to edit it too, so we click it\r\n                  $('.poodllconvedit_itemcontainer[data-id=\"' + newdataid + '\"] .poodllconvedit_tt').trigger('click');\r\n              };\r\n              var newtile = that.fetchNewTextTileContainer(newdataid,'',onend);\r\n\r\n          });\r\n\r\n\r\n      },\r\n\r\n\r\n      //each transcription item has a \"text tile\" with transcript text that we display\r\n      //when clicked we swap it out for the editor\r\n      //this takes all the transcription json and creates one tiles on page for each transcript part\r\n      initTiles: function(){\r\n          var container = this.controls.container;\r\n          var that = this;\r\n          var setcount = transcriptionset.fetchCount();\r\n\r\n          //the first render of template takes time and puts the first tile rendered after subsequent tiles,\r\n          // a better way might be force the order but for now we force an empty first render, and set reallyInitTiles to run after that\r\n          var reallyInitTiles = function() {\r\n              if (setcount > 0) {\r\n                  for (var setindex = 0; setindex < setcount; setindex++) {\r\n                      var item = transcriptionset.fetchItem(setindex);\r\n                      var onend = function (newtile) {\r\n                          container.append(newtile);\r\n                      };\r\n                      var newtile = that.fetchNewTextTileContainer(setindex, item.part, onend);\r\n                  }\r\n                  ;//end of for loop\r\n              }//end of if setcount\r\n          };\r\n          this.fetchNewTextTile(0,'',reallyInitTiles);\r\n      },\r\n\r\n\r\n      //Replace text tile we are editing with the editor, fill with data and display it\r\n      shiftEditor: function(newindex,newitemcontainer){\r\n\r\n          //hide editor\r\n          this.controls.editor.hide();\r\n\r\n          //newitem\r\n          var newitem =transcriptionset.fetchItem(newindex);\r\n\r\n          var part = newitem.part;\r\n          $(this.controls.edpart).val(part);\r\n\r\n          //remove old text tile and show editor in its place\r\n          newitemcontainer.empty();\r\n          newitemcontainer.append(this.controls.editor);\r\n          this.controls.editor.show();\r\n          this.editoropen=true;\r\n\r\n          $(this.controls.number).text(newindex + 1);\r\n\r\n      },\r\n\r\n      //Merge a template text tile,  with the time and transcription text data\r\n      fetchNewTextTile: function(dataid, part, onend){\r\n          var tdata=[];\r\n          tdata['imgpath'] = M.cfg.wwwroot + '/mod/pchat/pix/e/';\r\n          tdata['dataid'] = dataid+1;\r\n          tdata['part'] = part;\r\n\r\n          templates.render('mod_pchat/convtile',tdata).then(\r\n              function(html,js){\r\n                    onend(html);\r\n              }\r\n          );\r\n      },\r\n\r\n      //Merge a template text tile,  with the time and transcription text data\r\n      fetchNewTextTileContainer: function(dataid, part, onend){\r\n          var tdata=[];\r\n          tdata['imgpath'] = M.cfg.wwwroot + '/mod/pchat/pix/e/';\r\n          tdata['outerdataid'] = dataid;\r\n          tdata['dataid'] = dataid+1;\r\n          tdata['part'] = part;\r\n\r\n          templates.render('mod_pchat/convtilecontainer',tdata).then(\r\n              function(html,js){\r\n                    onend(html);\r\n              }\r\n          );\r\n      },\r\n\r\n      clearTiles: function(){\r\n          this.controls.container.empty();\r\n      },\r\n\r\n      resetData: function(transcriptiondata){\r\n          this.hideEditor();\r\n          this.clearTiles();\r\n          transcriptionset.init(transcriptiondata);\r\n          this.initTiles();\r\n          this.doSave();\r\n      },\r\n\r\n      syncFrom: function(index){\r\n          var setcount = transcriptionset.fetchCount();\r\n          var that=this;\r\n          for(var setindex=index; setindex < setcount;setindex++){\r\n              var item =transcriptionset.fetchItem(setindex);\r\n              var container = $('.poodllconvedit_itemcontainer').filter(function() {\r\n                  return parseInt($(this).attr(\"data-id\")) == setindex;\r\n              });\r\n              if(container.length > 0){\r\n                  this.updateTextTile(container,item);\r\n              }else{\r\n                  var onend = function(newtile){that.controls.container.append(newtile);};\r\n                  var newtile = this.fetchNewTextTileContainer(setindex,item.part,onend);\r\n              }\r\n          }\r\n          //remove any elements greater than the last data-id\r\n          $('.poodllconvedit_itemcontainer').filter(function() {\r\n              return parseInt($(this).attr(\"data-id\")) >= setcount;\r\n          }).remove();\r\n      },\r\n      syncAt: function(index){\r\n          //do something\r\n\r\n      },\r\n      updateTextTile: function(container,item){\r\n          $(container).find('.poodllconvedit_tt_part').text(item.part);\r\n          return;\r\n      },\r\n\r\n\r\n      fetchTranscriptionData: function(){\r\n          return transcriptionset.fetchTranscriptionData();\r\n      },\r\n\r\n      //overwrite this in your calling class\r\n      doSave: function(){\r\n          //do something\r\n      }\r\n  }\r\n});\r\n"],"names":["define","$","def","constants","vtthelper","transcriptionset","playerhelper","templates","controls","currentindex","currentitemcontainer","editoropen","firstrender","init","transcriptiondata","mediatype","initControls","initTiles","initEvents","container","editor","number","edpart","C_EDITFIELD","buttondelete","C_BUTTONDELETE","buttonmoveup","C_BUTTONMOVEUP","buttonmovedown","C_BUTTONMOVEDOWN","buttonapply","C_BUTTONAPPLY","buttoncancel","C_BUTTONCANCEL","buttonaddnew","hideEditor","detach","hide","restoreTile","item","fetchItem","this","that","fetchNewTextTile","part","tile","append","editorToTile","onend","val","updateItem","doSave","removeClass","on","newindex","parseInt","parent","attr","theparent","do_next_tile_edit","shiftEditor","result","confirm","removeItem","syncFrom","moveup","movedown","click","currentcount","fetchCount","newdataid","addItem","fetchNewTextTileContainer","newtile","trigger","setcount","setindex","newitemcontainer","empty","show","text","dataid","tdata","M","cfg","wwwroot","render","then","html","js","clearTiles","resetData","index","filter","length","updateTextTile","remove","syncAt","find","fetchTranscriptionData"],"mappings":"AAAAA,sCAAO,CAAC,SAAU,wBAAyB,kCAAmC,sBAAsB,4BAA4B,yBAAyB,mBACrJ,SAASC,EAAGC,IAAKC,UAAWC,UAAWC,iBAAkBC,aAAaC,iBAIjE,CACHC,SAAU,GACVC,cAAc,EACdC,qBAAsB,KACtBC,YAAY,EACZC,aAAa,EAGbC,KAAM,SAASC,kBAAkBC,WAC7BV,iBAAiBQ,KAAKC,mBACtBR,aAAaO,KAAKE,gBACbC,oBACAC,iBACAC,cAITF,aAAc,gBACLR,SAASW,UAAYlB,EAAE,8BACvBO,SAASY,OAASnB,EAAE,+BACpBO,SAASa,OAASpB,EAAE,0CACpBO,SAASc,OAASrB,EAAE,IAAMC,IAAIqB,kBAC9Bf,SAASgB,aAAevB,EAAE,IAAMC,IAAIuB,qBACpCjB,SAASkB,aAAezB,EAAE,IAAMC,IAAIyB,qBACpCnB,SAASoB,eAAiB3B,EAAE,IAAMC,IAAI2B,uBACtCrB,SAASsB,YAAc7B,EAAE,IAAMC,IAAI6B,oBACnCvB,SAASwB,aAAe/B,EAAE,IAAMC,IAAI+B,qBACpCzB,SAAS0B,aAAejC,EAAE,2BAInCkC,WAAY,gBACH3B,SAASY,OAAOgB,cAChB5B,SAASY,OAAOiB,YAChB1B,YAAW,GAGpB2B,YAAa,eACNC,KAAOlC,iBAAiBmC,UAAUC,KAAKhC,cACvCiC,KAAKD,UAMJE,iBAAiBF,KAAKhC,aAAa8B,KAAKK,MAJhC,SAASC,MACjBH,KAAKP,aACLO,KAAKhC,qBAAqBoC,OAAOD,UAMzCE,aAAc,SAASvC,SAASC,aAAaC,qBAAsBsC,WAC3DJ,KAAO3C,EAAEO,SAASc,QAAQ2B,MAC9B5C,iBAAiB6C,WAAWzC,aAAamC,WACpCO,aAEDT,KAAOD,iBAaNE,iBAAiBlC,aAAamC,MAZb,SAASC,MAGvBH,KAAK/B,aAET+B,KAAKP,aACLzB,qBAAqBoC,OAAOD,MAC5B5C,EAAES,sBAAsB0C,YAAY,WACjCJ,OACCA,aAID,GAKX9B,WAAY,eACJwB,KAAOD,UAGNjC,SAASW,UAAUkC,GAAG,QAAQ,sBAAqB,eAChDC,SAAWC,SAAStD,EAAEwC,MAAMe,SAASC,KAAK,YAC1CC,UAAYzD,EAAEwC,MAAMe,SACpBG,kBAAoB,WACpBjB,KAAKjC,aAAe6C,SACpBZ,KAAKhC,qBAAuBgD,UAC5BhB,KAAKkB,YAAYlB,KAAKjC,aAAciC,KAAKhC,wBAGtB,IAApBgC,KAAK/B,WAEJ+B,KAAKK,aAAaL,KAAKlC,SAASkC,KAAKjC,aAAaiC,KAAKhC,qBAAsBiD,mBAE7EA,4BAOHnD,SAASW,UAAUkC,GAAG,QAAQ,IAAMnD,IAAIuB,gBAAe,WAExDoC,OAASC,QAAQ,8CACbD,SACFnB,KAAKJ,cACLjC,iBAAiB0D,WAAWrB,KAAKjC,cACjCiC,KAAKsB,SAAStB,KAAKjC,uBASpBD,SAASW,UAAUkC,GAAG,QAAQ,IAAMnD,IAAIyB,gBAAe,WAMxDe,KAAKK,aAAaL,KAAKlC,SAASkC,KAAKjC,aAAaiC,KAAKhC,sBAL3C,WACRL,iBAAiB4D,OAAOvB,KAAKjC,cAC7BiC,KAAKsB,SAAStB,KAAKjC,aAAa,GAChCiC,KAAKS,oBAQR3C,SAASW,UAAUkC,GAAG,QAAQ,IAAMnD,IAAI2B,kBAAiB,WAM1Da,KAAKK,aAAaL,KAAKlC,SAASkC,KAAKjC,aAAaiC,KAAKhC,sBAL3C,WACRL,iBAAiB6D,SAASxB,KAAKjC,cAC/BiC,KAAKsB,SAAStB,KAAKjC,cACnBiC,KAAKS,oBAQR3C,SAASW,UAAUkC,GAAG,QAAQ,IAAMnD,IAAI6B,eAAc,WACvDW,KAAKK,aAAaL,KAAKlC,SAASkC,KAAKjC,aAAaiC,KAAKhC,8BAKtDF,SAASW,UAAUkC,GAAG,YAAW,WAClCX,KAAKK,aAAaL,KAAKlC,SAASkC,KAAKjC,aAAaiC,KAAKhC,8BAKtDF,SAASW,UAAUkC,GAAG,QAAQ,IAAMnD,IAAI+B,gBAAe,WACxDS,KAAKJ,sBAKJ9B,SAAS0B,aAAaiC,OAAM,eACzBC,aAAe/D,iBAAiBgE,aAChCC,UAAUF,gBACXA,aAAc,EACE/D,iBAAiBmC,UAAU4B,aAAa,GAG3D/D,iBAAiBkE,QAAQD,UAAU,IAQrB5B,KAAK8B,0BAA0BF,UAAU,IAN3C,SAASG,SAEjB/B,KAAKlC,SAASW,UAAU2B,OAAO2B,SAE/BxE,EAAE,0CAA4CqE,UAAY,yBAAyBI,QAAQ,gBAavGzD,UAAW,eACHE,UAAYsB,KAAKjC,SAASW,UAC1BuB,KAAOD,KACPkC,SAAWtE,iBAAiBgE,kBAgB3B1B,iBAAiB,EAAE,IAZF,cACdgC,SAAW,MACN,IAAIC,SAAW,EAAGA,SAAWD,SAAUC,gBACpCrC,KAAOlC,iBAAiBmC,UAAUoC,UAIxBlC,KAAK8B,0BAA0BI,SAAUrC,KAAKK,MAHhD,SAAU6B,SAClBtD,UAAU2B,OAAO2B,iBAYrCb,YAAa,SAASN,SAASuB,uBAGtBrE,SAASY,OAAOiB,WAKjBO,KAFSvC,iBAAiBmC,UAAUc,UAErBV,KACnB3C,EAAEwC,KAAKjC,SAASc,QAAQ2B,IAAIL,MAG5BiC,iBAAiBC,QACjBD,iBAAiB/B,OAAOL,KAAKjC,SAASY,aACjCZ,SAASY,OAAO2D,YAChBpE,YAAW,EAEhBV,EAAEwC,KAAKjC,SAASa,QAAQ2D,KAAK1B,SAAW,IAK5CX,iBAAkB,SAASsC,OAAQrC,KAAMI,WACjCkC,MAAM,GACVA,MAAK,QAAcC,EAAEC,IAAIC,QAAU,oBACnCH,MAAK,OAAaD,OAAO,EACzBC,MAAK,KAAWtC,KAEhBrC,UAAU+E,OAAO,qBAAqBJ,OAAOK,MACzC,SAASC,KAAKC,IACRzC,MAAMwC,UAMpBhB,0BAA2B,SAASS,OAAQrC,KAAMI,WAC1CkC,MAAM,GACVA,MAAK,QAAcC,EAAEC,IAAIC,QAAU,oBACnCH,MAAK,YAAkBD,OACvBC,MAAK,OAAaD,OAAO,EACzBC,MAAK,KAAWtC,KAEhBrC,UAAU+E,OAAO,8BAA8BJ,OAAOK,MAClD,SAASC,KAAKC,IACRzC,MAAMwC,UAKpBE,WAAY,gBACHlF,SAASW,UAAU2D,SAG5Ba,UAAW,SAAS7E,wBACXqB,kBACAuD,aACLrF,iBAAiBQ,KAAKC,wBACjBG,iBACAkC,UAGTa,SAAU,SAAS4B,eACXjB,SAAWtE,iBAAiBgE,aAC5B3B,KAAKD,KACDmC,SAASgB,MAAOhB,SAAWD,SAASC,WAAW,KAC/CrC,KAAMlC,iBAAiBmC,UAAUoC,UACjCzD,UAAYlB,EAAE,iCAAiC4F,QAAO,kBAC/CtC,SAAStD,EAAEwC,MAAMgB,KAAK,aAAemB,eAE7CzD,UAAU2E,OAAS,OACbC,eAAe5E,UAAUoB,WAGhBE,KAAK+B,0BAA0BI,SAASrC,KAAKK,MAD/C,SAAS6B,SAAS/B,KAAKlC,SAASW,UAAU2B,OAAO2B,YAKrExE,EAAE,iCAAiC4F,QAAO,kBAC/BtC,SAAStD,EAAEwC,MAAMgB,KAAK,aAAekB,YAC7CqB,UAEPC,OAAQ,SAASL,SAIjBG,eAAgB,SAAS5E,UAAUoB,MAC/BtC,EAAEkB,WAAW+E,KAAK,2BAA2BlB,KAAKzC,KAAKK,OAK3DuD,uBAAwB,kBACb9F,iBAAiB8F,0BAI5BhD,OAAQ"}