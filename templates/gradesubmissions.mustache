<!-- Paged Navigation -->
<div class="pchat_grading_submissions_container">
    <div class="pchat_grading_nav">
        <a class="btn btn-secondary pchat_grading_back_btn" href="#" alt="back"><i class="fa fa-arrow-left"></i></a>
        <a class="btn btn-secondary pchat_grading_forward_btn" href="#" alt="forward"><i class="fa fa-arrow-right"></i></a>
    </div>

<div class="card-group">
    {{#studentsToGrade}}
        <div class="card" data-original-student="{{.}}">
        <div class="card-header">
            <div class="input-group mb-3">
                {{selected}}
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">{{# str }} gradesstudent, mod_pchat {{/ str }}</label>
                </div>
                <select class="custom-select" name="gradesUserSelect" id="gradesUserSelect-{{.}}">
                    <option>{{# str }} gradeschoose, mod_pchat {{/ str }}</option>
                    {{#submissionCandidates}}
                        <option value="{{id}}">{{lastname}}, {{firstname}}</option>
                    {{/submissionCandidates}}
                </select>
            </div>
        </div>
        {{#singlemode}}
        <div class="card-body">
            <h5 class="card-title">{{# str }} selfreview, mod_pchat {{/ str }}</h5>
            <div class="mod_pchat_summaryselfreview">
                    <div class="summarybox summarytopic" style="width: 33%">
                        <div class="summaryboxtitle">{{{revq1}}}</div>
                        <div class="reviewboxcontent chat_revq1"></div>
                    </div>
                    <div class="summarybox summarytopic" style="width: 33%">
                        <div class="summaryboxtitle">{{{revq2}}}</div>
                        <div class="reviewboxcontent chat_revq2"></div>
                    </div>
                    <div class="summarybox summarytopic" style="width: 33%">
                        <div class="summaryboxtitle">{{{revq3}}}</div>
                        <div class="reviewboxcontent chat_revq3"></div>
                    </div>
            </div>
        </div>
        {{/singlemode}}
        <div class="card-body">
            <h5 class="card-title">{{# str }} gradestranscript, mod_pchat {{/ str }}</h5>
            <div class="mod_pchat_overflow_auto">
                <div class="mod_pchat_grading_passagecont mod_pchat_summarytranscriptplaceholder mod_pchat_overflow_auto min-vh-400" style="height: 400px;">
                    <span class="chat_transcript">Loading...</span>
                </div>
            </div>
        </div>
        <div class="alert alert-secondary justify-content-center align-middle" role="alert" style="text-align: center;">
            <div class="mod_pchat_nativeaudioplayer_cont">
                <audio class="chat_player" controls=""></audio>
            </div>
        </div>

        <div class="container">
        {{#singlemode}}
            {{>mod_pchat/selfreviewstats}}
        {{/singlemode}}
        {{^singlemode}}
            <div class="row">
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_TW, mod_pchat {{/ str }} <span class="chat_tw">0</span></span>
                </div>
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_TT, mod_pchat {{/ str }} <span class="chat_tt">0</span></span>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_ATL, mod_pchat {{/ str }} <span class="chat_atl">0</span></span>
                </div>
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_LTL, mod_pchat {{/ str }} <span class="chat_ltl">0</span></span>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_TV, mod_pchat {{/ str }} <span class="chat_tv">0</span></span>
                </div>
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_TTV, mod_pchat {{/ str }} <span class="chat_ttv">0</span></span>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_QA, mod_pchat {{/ str }} <span class="chat_qa">0</span></span>
                </div>
                <div class="col">
                    <span class="badge badge-light">{{# str }} short_AIA, mod_pchat {{/ str }} <span class="chat_aia">0</span></span>
                </div>
            </div>
        </div>
    {{/singlemode}}
        <div class="alert alert-secondary justify-content-center align-middle" style="text-align: center;" role="alert">
            <input type="button" data-action="creategrademodal" disabled="disabled"
                   data-cm-id="{{cmid}}"
                   data-attempt-id="{{attemptid}}"
                   data-student-id="0" class=" justify-content-center align-middle" name="grade" id="create-modal" value="Grade entry">
        </div>
        <div class="card-footer">
            <small class="text-muted">
                <strong>{{# str }} gradesgrade, mod_pchat {{/ str }} </strong>: <span class="chat_rubricscore"></span><br >
                <strong>{{# str }} gradesfeedback, mod_pchat {{/ str }} </strong>: <span class="chat_feedback"></span>
            </small>
        </div>
    </div>
    {{/studentsToGrade}}
</div>
    <!-- Paged Navigation -->
    <div class="pchat_grading_nav">
        <a class="btn btn-secondary pchat_grading_back_btn" href="#" alt="back"><i class="fa fa-arrow-left"></i></a>
        <a class="btn btn-secondary pchat_grading_forward_btn" href="#" alt="forward"><i class="fa fa-arrow-right"></i></a>
    </div>
</div><!-- end of pchatsubmissions grading container-->
{{^element.frozen}}
{{#js}}
    $('[data-action=creategrademodal]').attr('disabled', 'disabled');

    require(['jquery', 'core/modal_factory', 'core/ajax','core/templates', 'mod_pchat/gradeform'],
    function($, ModalFactory, ajax, templates, GradeForm) {
        var currentpage = {{currentpage}};
        const pages =JSON.parse('{{{pages}}}');
        var backbutton=$(".pchat_grading_back_btn");
        var forwardbutton=$(".pchat_grading_forward_btn");

        //kick it off by loading the data into the columns
        reloadAllElements();

        //also init events on columns (we separate this from reloadAllEvents, because it only needs doing once)
        initElementEvents();

        $("[data-original-student]").change(function () { loadStudentData(this); });

        //set up the nav buttons
        resetNavButtons();

        //reset nav buttons
        function resetNavButtons(){
            if(currentpage==0){
                backbutton.attr('disabled','disabled');
            }else{
                backbutton.removeAttr('disabled');
            }
            backbutton.html("<i class='fa fa-arrow-left'></i> (" + (pages.length -1 - currentpage) + ")");

            if(currentpage==pages.length-1){
                forwardbutton.attr('disabled','disabled');
            }else{
                forwardbutton.removeAttr('disabled');
            }
            forwardbutton.html("<i class='fa fa-arrow-right'></i> (" + currentpage + ")");
        }

        //load columns with user attempt ( userids on each column)
        function initElementEvents(){
            document.querySelectorAll("[data-original-student]").forEach(
                function(element) {
                    GradeForm.init($(element).find('input[type=button]'), {{contextid}}, '{{grademethod}}');
                 }
            );
        }

        //set the userids to the columns (prior to reload)
        function resetElements(){
            var i=0;
            var originalStudentId = '';
            document.querySelectorAll("[data-original-student]").forEach(
                function(element) {
                    if(i> pages[currentpage].length-1){
                        originalStudentId = '';
                    }else{
                        originalStudentId = pages[currentpage][i];
                    }
                    $(element).attr("data-original-student",originalStudentId);
                    i++;
                }
            );//end of for each
        }

        //load columns with user attempt ( userids on each column)
        function reloadAllElements(){
            document.querySelectorAll("[data-original-student]").forEach(
                function(element) {
                    var originalStudentId = $(element).attr("data-original-student");
                    var selectBox = element.querySelector('select[name="gradesUserSelect"]');
                    selectBox.value = originalStudentId;
                     //we do not disable the first select box anymore
                    // $("[data-original-student]").first().find('select').attr('disabled','disabled');
                    loadStudentData(element);
                    // No longer necessary
                    // GradeForm.init($(element).find('input[type=button]'), {{contextid}},'{{grademethod}}');
                }
            );
        }

        //on back button, load a new page
        $(".pchat_grading_forward_btn").click(function(){
            if(currentpage>0){
                currentpage--;
                resetElements();
                reloadAllElements();
            }//end of if current page
            resetNavButtons();
            return false;
        });

        //on forward button, load a new page
        $(".pchat_grading_back_btn").click(function(){
            if(currentpage < pages.length -1){
                currentpage++;
                resetElements();
                reloadAllElements();
            }//end of if current page
            resetNavButtons();
            return false;
        });

        //load one column of student data
        function loadStudentData(element) {
            const selectBox = element.querySelector('select[name="gradesUserSelect"]');
            $(element).find('input[type=button]').attr('disabled', 'disabled');
            studentId = selectBox.value;
            $(element).find('.chat_player').attr('src','');
            $(element).find('.chat_transcript').html("No data.");
            $(element).find('.chat_tt').html(0);
            $(element).find('.chat_tw').html(0);
            $(element).find('.chat_atl').html(0);
            $(element).find('.chat_ltl').html(0);
            $(element).find('.chat_tv').html(0);
            $(element).find('.chat_ttv').html(0);
            $(element).find('.chat_qa').html(0);
            $(element).find('.chat_rubricscore').html("");
            $(element).find('.chat_feedback').html("");
            $(element).find('.chat_aia').html("");
            $(element).find('.chat_revq1').html("");
            $(element).find('.chat_revq2').html("");
            $(element).find('.chat_revq3').html("");
            if (studentId) {
                $(selectBox).closest('[data-original-student]').attr('data-original-student', studentId);
                $(element).find('input[type=button]').attr("data-student-id",studentId);

                var promises = ajax.call([
                { methodname: 'mod_pchat_get_grade_submission', args: {  userid: studentId, cmid: {{cmid}} } },
                ]);

                promises[0].done(function(response) {


                    if(response && response.response[0]) {
                        $(element).find('input[type=button]').removeAttr("disabled");
                        $(element).find('.chat_player').attr('src', response.response[0].filename);

                        var a ={};
                        var st = JSON.parse(response.response[0].selftranscript);
                        a.selftranscriptparts=[];
                        $.each(st,function(index,oneturn){
                          a.selftranscriptparts.push(oneturn.part);
                        });
                        templates.render('mod_pchat/summarytranscript',{a: a}).then(
                             function(html,js){
                                $(element).find('.chat_transcript').html(html);
                              }
                        );

                      // $(element).find('.chat_transcript').html(response.response[0].transcript);
                        $(element).find('.chat_tt').html(response.response[0].tt);
                        $(element).find('.chat_tw').html(response.response[0].tw);
                        $(element).find('.chat_atl').html(response.response[0].atl);
                        $(element).find('.chat_ltl').html(response.response[0].ltl);
                        $(element).find('.chat_tv').html(response.response[0].tv);
                        $(element).find('.chat_ttv').html(response.response[0].ttv);
                        $(element).find('.chat_qa').html(response.response[0].qa);
                        $(element).find('.chat_rubricscore').html(response.response[0].rubricscore);
                        $(element).find('.chat_feedback').html(response.response[0].feedback);
                        $(element).find('.chat_aia').html(response.response[0].aia);
                        $(element).find('.chat_revq1').html(response.response[0].revq1);
                        $(element).find('.chat_revq2').html(response.response[0].revq2);
                        $(element).find('.chat_revq3').html(response.response[0].revq3);
                    }
                }).fail(function(ex) {
                    // @todo do something with the exception
                });
            }
        }
    });
{{/js}}
{{/element.frozen}}

